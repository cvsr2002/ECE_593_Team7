Coverage Report by file with details

=================================================================================
=== File: ../design_rtl/alu.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        29        29         0   100.00%

================================Branch Details================================

Branch Coverage for file ../design_rtl/alu.sv --

------------------------------------IF Branch------------------------------------
    18                                    358430     Count coming in to IF
    18              1                          3         if (rst) result <= 0;
    19              1                      99999         else if (enable) begin
    54              1                     258428             end else instr_exec <= 0;
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    28                                     99999     Count coming in to CASE
    30              1                       2603                 M_ADD, M_ADDI  : result <= op1 + op2;
    30              2                       2577     
    31              1                       2640                 M_SUB          : result <= op1 - op2;
    34              1                       2554                 M_STLU, M_STLUI: result <= ($unsigned(op1) < $unsigned(op2)) ? 1 : 0;
    34              2                       2556     
    35              1                       5194                 M_STL, M_STLI  : result <=   ($signed(op1) <   $signed(op2)) ? 1 : 0;
    35              2                       2564     
    38              1                       2611                 M_AND, M_ANDI  : result <= op1 & op2;
    38              2                       2660     
    39              1                       2642                 M_OR, M_ORI    : result <= op1 | op2;
    39              2                       2688     
    40              1                       2587                 M_XOR, M_XORI  : result <= op1 ^ op2;
    40              2                       2674     
    43              1                       2750                 M_SLL, M_SLLI  : result <= op1 << op2[4:0];
    43              2                       2676     
    44              1                       2630                 M_SRL, M_SRLI  : result <= $unsigned(op1) >>  op2[4:0];
    44              2                       2743     
    45              1                       2642                 M_SRA, M_SRAI  : result <=   $signed(op1) >>> op2[4:0];
    45              2                       2642     
    48              1                       2596                 M_LUI          : result <= op1;               // op1 = immediate
    49              1                       2702                 M_AUIPC        : result <= op1 + op2;         // op1 = immediate
    51              1                      42068                 default: instr_exec <= 0;   // silently ignore bad opcodes, hold prior output
Branch totals: 22 hits of 22 branches = 100.00%

------------------------------------IF Branch------------------------------------
    34                                      5110     Count coming in to IF
    34              3                       2555                 M_STLU, M_STLUI: result <= ($unsigned(op1) < $unsigned(op2)) ? 1 : 0;
    34              4                       2555                 M_STLU, M_STLUI: result <= ($unsigned(op1) < $unsigned(op2)) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    35                                      7758     Count coming in to IF
    35              3                       3688                 M_STL, M_STLI  : result <=   ($signed(op1) <   $signed(op2)) ? 1 : 0;
    35              4                       4070                 M_STL, M_STLI  : result <=   ($signed(op1) <   $signed(op2)) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for file ../design_rtl/alu.sv --

----------------Focused Condition View-------------------
Line       34 Item    1  (op1 < op2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (op1 < op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 < op2)_0         -                             
  Row   2:          1  (op1 < op2)_1         -                             

----------------Focused Condition View-------------------
Line       35 Item    1  (op1 < op2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (op1 < op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 < op2)_0         -                             
  Row   2:          1  (op1 < op2)_1         -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        17         0   100.00%

================================Statement Details================================

Statement Coverage for file ../design_rtl/alu.sv --

    1                                                
    2                                                import opcodes::*;
    3                                                
    4                                                module alu #(
    5                                                    parameter trace = 0
    6                                                  ) (
    7                                                    input logic clk,
    8                                                    input logic rst,
    9                                                    input var instruction_t instr,  // Current instruction
    10                                                   input register_t op1,           // Operand 1 (from register/immediate)
    11                                                   input register_t op2,           // Operand 2 (from register/immediate)
    12                                                   input logic enable,             // enable signal
    13                                                   output logic instr_exec,        // opcode was executed
    14                                                   output register_t result        // ALU result
    15                                               );
    16                                               
    17              1                     358430     always_ff @(posedge clk) begin
    18              1                          3         if (rst) result <= 0;
    19                                                   else if (enable) begin
    20                                                  
    21                                               `ifndef SYNTHESIS
    22                                                       // trace of code execution
    23                                                       if (trace) if (enable && is_alu_op(instr))
    24                                                           $display("%t executed: %s ", $time, decode_instr(instr));
    25                                               `endif 
    26              1                      99999             instr_exec <= 1;
    27                                               
    28                                                       casez (instr)
    29                                                           // Arithmetic Operations
    30              1                       5180                 M_ADD, M_ADDI  : result <= op1 + op2;
    31              1                       2640                 M_SUB          : result <= op1 - op2;
    32                                                           
    33                                                           // Comparisons
    34              1                       5110                 M_STLU, M_STLUI: result <= ($unsigned(op1) < $unsigned(op2)) ? 1 : 0;
    35              1                       7758                 M_STL, M_STLI  : result <=   ($signed(op1) <   $signed(op2)) ? 1 : 0;
    36                                                           
    37                                                           // Logical Operations
    38              1                       5271                 M_AND, M_ANDI  : result <= op1 & op2;
    39              1                       5330                 M_OR, M_ORI    : result <= op1 | op2;
    40              1                       5261                 M_XOR, M_XORI  : result <= op1 ^ op2;
    41                                                           
    42                                                           // Shifts
    43              1                       5426                 M_SLL, M_SLLI  : result <= op1 << op2[4:0];
    44              1                       5373                 M_SRL, M_SRLI  : result <= $unsigned(op1) >>  op2[4:0];
    45              1                       5284                 M_SRA, M_SRAI  : result <=   $signed(op1) >>> op2[4:0];
    46                                                           
    47                                                           // Upper Immediate
    48              1                       2596                 M_LUI          : result <= op1;               // op1 = immediate
    49              1                       2702                 M_AUIPC        : result <= op1 + op2;         // op1 = immediate
    50                                                         
    51              1                      42068                 default: instr_exec <= 0;   // silently ignore bad opcodes, hold prior output
    52                                               
    53                                                           endcase
    54              1                     258428             end else instr_exec <= 0;
    55                                               end
    56                                               endmodule
    57                                                

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        264       260         4    98.48%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/alu.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          7                                    clk           1           1                              100.00 
          8                                    rst           1           1                              100.00 
          9                               instr[9]           1           1                              100.00 
          9                               instr[8]           1           1                              100.00 
          9                               instr[7]           1           1                              100.00 
          9                               instr[6]           1           1                              100.00 
          9                               instr[5]           1           1                              100.00 
          9                               instr[4]           1           1                              100.00 
          9                               instr[3]           1           1                              100.00 
          9                              instr[31]           1           1                              100.00 
          9                              instr[30]           1           1                              100.00 
          9                               instr[2]           1           1                              100.00 
          9                              instr[29]           1           1                              100.00 
          9                              instr[28]           1           1                              100.00 
          9                              instr[27]           1           1                              100.00 
          9                              instr[26]           1           1                              100.00 
          9                              instr[25]           1           1                              100.00 
          9                              instr[24]           1           1                              100.00 
          9                              instr[23]           1           1                              100.00 
          9                              instr[22]           1           1                              100.00 
          9                              instr[21]           1           1                              100.00 
          9                              instr[20]           1           1                              100.00 
          9                               instr[1]           0           0                                0.00 
          9                              instr[19]           1           1                              100.00 
          9                              instr[18]           1           1                              100.00 
          9                              instr[17]           1           1                              100.00 
          9                              instr[16]           1           1                              100.00 
          9                              instr[15]           1           1                              100.00 
          9                              instr[14]           1           1                              100.00 
          9                              instr[13]           1           1                              100.00 
          9                              instr[12]           1           1                              100.00 
          9                              instr[11]           1           1                              100.00 
          9                              instr[10]           1           1                              100.00 
          9                               instr[0]           0           0                                0.00 
         10                                 op1[9]           1           1                              100.00 
         10                                 op1[8]           1           1                              100.00 
         10                                 op1[7]           1           1                              100.00 
         10                                 op1[6]           1           1                              100.00 
         10                                 op1[5]           1           1                              100.00 
         10                                 op1[4]           1           1                              100.00 
         10                                 op1[3]           1           1                              100.00 
         10                                op1[31]           1           1                              100.00 
         10                                op1[30]           1           1                              100.00 
         10                                 op1[2]           1           1                              100.00 
         10                                op1[29]           1           1                              100.00 
         10                                op1[28]           1           1                              100.00 
         10                                op1[27]           1           1                              100.00 
         10                                op1[26]           1           1                              100.00 
         10                                op1[25]           1           1                              100.00 
         10                                op1[24]           1           1                              100.00 
         10                                op1[23]           1           1                              100.00 
         10                                op1[22]           1           1                              100.00 
         10                                op1[21]           1           1                              100.00 
         10                                op1[20]           1           1                              100.00 
         10                                 op1[1]           1           1                              100.00 
         10                                op1[19]           1           1                              100.00 
         10                                op1[18]           1           1                              100.00 
         10                                op1[17]           1           1                              100.00 
         10                                op1[16]           1           1                              100.00 
         10                                op1[15]           1           1                              100.00 
         10                                op1[14]           1           1                              100.00 
         10                                op1[13]           1           1                              100.00 
         10                                op1[12]           1           1                              100.00 
         10                                op1[11]           1           1                              100.00 
         10                                op1[10]           1           1                              100.00 
         10                                 op1[0]           1           1                              100.00 
         11                                 op2[9]           1           1                              100.00 
         11                                 op2[8]           1           1                              100.00 
         11                                 op2[7]           1           1                              100.00 
         11                                 op2[6]           1           1                              100.00 
         11                                 op2[5]           1           1                              100.00 
         11                                 op2[4]           1           1                              100.00 
         11                                 op2[3]           1           1                              100.00 
         11                                op2[31]           1           1                              100.00 
         11                                op2[30]           1           1                              100.00 
         11                                 op2[2]           1           1                              100.00 
         11                                op2[29]           1           1                              100.00 
         11                                op2[28]           1           1                              100.00 
         11                                op2[27]           1           1                              100.00 
         11                                op2[26]           1           1                              100.00 
         11                                op2[25]           1           1                              100.00 
         11                                op2[24]           1           1                              100.00 
         11                                op2[23]           1           1                              100.00 
         11                                op2[22]           1           1                              100.00 
         11                                op2[21]           1           1                              100.00 
         11                                op2[20]           1           1                              100.00 
         11                                 op2[1]           1           1                              100.00 
         11                                op2[19]           1           1                              100.00 
         11                                op2[18]           1           1                              100.00 
         11                                op2[17]           1           1                              100.00 
         11                                op2[16]           1           1                              100.00 
         11                                op2[15]           1           1                              100.00 
         11                                op2[14]           1           1                              100.00 
         11                                op2[13]           1           1                              100.00 
         11                                op2[12]           1           1                              100.00 
         11                                op2[11]           1           1                              100.00 
         11                                op2[10]           1           1                              100.00 
         11                                 op2[0]           1           1                              100.00 
         12                                 enable           1           1                              100.00 
         13                             instr_exec           1           1                              100.00 
         14                              result[9]           1           1                              100.00 
         14                              result[8]           1           1                              100.00 
         14                              result[7]           1           1                              100.00 
         14                              result[6]           1           1                              100.00 
         14                              result[5]           1           1                              100.00 
         14                              result[4]           1           1                              100.00 
         14                              result[3]           1           1                              100.00 
         14                             result[31]           1           1                              100.00 
         14                             result[30]           1           1                              100.00 
         14                              result[2]           1           1                              100.00 
         14                             result[29]           1           1                              100.00 
         14                             result[28]           1           1                              100.00 
         14                             result[27]           1           1                              100.00 
         14                             result[26]           1           1                              100.00 
         14                             result[25]           1           1                              100.00 
         14                             result[24]           1           1                              100.00 
         14                             result[23]           1           1                              100.00 
         14                             result[22]           1           1                              100.00 
         14                             result[21]           1           1                              100.00 
         14                             result[20]           1           1                              100.00 
         14                              result[1]           1           1                              100.00 
         14                             result[19]           1           1                              100.00 
         14                             result[18]           1           1                              100.00 
         14                             result[17]           1           1                              100.00 
         14                             result[16]           1           1                              100.00 
         14                             result[15]           1           1                              100.00 
         14                             result[14]           1           1                              100.00 
         14                             result[13]           1           1                              100.00 
         14                             result[12]           1           1                              100.00 
         14                             result[11]           1           1                              100.00 
         14                             result[10]           1           1                              100.00 
         14                              result[0]           1           1                              100.00 

Total Node Count     =        132 
Toggled Node Count   =        130 
Untoggled Node Count =          2 

Toggle Coverage      =      98.48% (260 of 264 bins)

=================================================================================
=== File: ../design_rtl/branch_ctrl.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        25        25         0   100.00%

================================Branch Details================================

Branch Coverage for file ../design_rtl/branch_ctrl.sv --

------------------------------------IF Branch------------------------------------
    19                                    302946     Count coming in to IF
    19              1                          3          if (rst) next_pc <= '0;
    20              1                     302943          else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    21                                    302943     Count coming in to IF
    21              1                      99999            if (enable) begin
                                          202944     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    24                                     99999     Count coming in to CASE
    26              1                       2711                M_JAL  : next_pc <= op1;
    27              1                       2648                M_JALR : next_pc <= op1 + op2;
    30              1                       2674                M_BEQ  : next_pc <= (op1 == op2) ? pc + op3 : pc + 4;
    31              1                       2787                M_BNE  : next_pc <= (op1 != op2) ? pc + op3 : pc + 4;
    32              1                       2635                M_BLT  : next_pc <= (op1 < op2)  ? pc + op3 : pc + 4;
    33              1                       2503                M_BLTU : next_pc <= (unsigned'(op1) < unsigned'(op2)) ? pc + op3 : pc + 4;
    34              1                       2471                M_BGE  : next_pc <= (op1 >= op2) ? pc + op3 : pc + 4;
    35              1                       2665                M_BGEU : next_pc <= (unsigned'(op1) >= unsigned'(op2)) ? pc + op3 : pc + 4;
    36              1                      78905                default : next_pc <= pc + 4;
Branch totals: 9 hits of 9 branches = 100.00%

------------------------------------IF Branch------------------------------------
    30                                      2674     Count coming in to IF
    30              2                         89                M_BEQ  : next_pc <= (op1 == op2) ? pc + op3 : pc + 4;
    30              3                       2585                M_BEQ  : next_pc <= (op1 == op2) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    31                                      2787     Count coming in to IF
    31              2                       2717                M_BNE  : next_pc <= (op1 != op2) ? pc + op3 : pc + 4;
    31              3                         70                M_BNE  : next_pc <= (op1 != op2) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    32                                      2635     Count coming in to IF
    32              2                       1307                M_BLT  : next_pc <= (op1 < op2)  ? pc + op3 : pc + 4;
    32              3                       1328                M_BLT  : next_pc <= (op1 < op2)  ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    33                                      2503     Count coming in to IF
    33              2                       1188                M_BLTU : next_pc <= (unsigned'(op1) < unsigned'(op2)) ? pc + op3 : pc + 4;
    33              3                       1315                M_BLTU : next_pc <= (unsigned'(op1) < unsigned'(op2)) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    34                                      2471     Count coming in to IF
    34              2                       1293                M_BGE  : next_pc <= (op1 >= op2) ? pc + op3 : pc + 4;
    34              3                       1178                M_BGE  : next_pc <= (op1 >= op2) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    35                                      2665     Count coming in to IF
    35              2                       1329                M_BGEU : next_pc <= (unsigned'(op1) >= unsigned'(op2)) ? pc + op3 : pc + 4;
    35              3                       1336                M_BGEU : next_pc <= (unsigned'(op1) >= unsigned'(op2)) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         6         0   100.00%

================================Condition Details================================

Condition Coverage for file ../design_rtl/branch_ctrl.sv --

----------------Focused Condition View-------------------
Line       30 Item    1  (op1 == op2)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (op1 == op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 == op2)_0        -                             
  Row   2:          1  (op1 == op2)_1        -                             

----------------Focused Condition View-------------------
Line       31 Item    1  (op1 != op2)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (op1 != op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 != op2)_0        -                             
  Row   2:          1  (op1 != op2)_1        -                             

----------------Focused Condition View-------------------
Line       32 Item    1  (op1 < op2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (op1 < op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 < op2)_0         -                             
  Row   2:          1  (op1 < op2)_1         -                             

----------------Focused Condition View-------------------
Line       33 Item    1  (op1 < op2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (op1 < op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 < op2)_0         -                             
  Row   2:          1  (op1 < op2)_1         -                             

----------------Focused Condition View-------------------
Line       34 Item    1  (op1 >= op2)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (op1 >= op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 >= op2)_0        -                             
  Row   2:          1  (op1 >= op2)_1        -                             

----------------Focused Condition View-------------------
Line       35 Item    1  (op1 >= op2)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (op1 >= op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 >= op2)_0        -                             
  Row   2:          1  (op1 >= op2)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        14         0   100.00%

================================Statement Details================================

Statement Coverage for file ../design_rtl/branch_ctrl.sv --

    1                                                
    2                                                import opcodes::*;
    3                                                
    4                                                module branch_unit (
    5                                                   input logic          clk, rst,
    6                                                
    7                                                   input wire instruction_t  instr,
    8                                                   input register_t     op1, op2, op3,
    9                                                   input logic          enable,        
    10                                                  output register_t    pc_out,
    11                                                  output register_t    ret_addr);
    12                                               
    13                                                  register_t pc, next_pc;
    14                                               
    15                                                  assign pc_out = pc;
    16                                                  assign pc = next_pc;
    17                                               
    18              1                     302946        always_ff @(posedge clk) begin
    19              1                          3          if (rst) next_pc <= '0;
    20                                                    else begin
    21                                                      if (enable) begin
    22              1                      99999              ret_addr <= pc + 4;
    23                                               	//	 $display("[DUT] Enable=%0b, instr=%0d, op1=%0d, op2=%0d, op3=%0d", enable, instr, op1, op2, op3);
    24                                                        casez (instr) 
    25                                               		   // Standard RISC-V Jump Instructions
    26              1                       2711                M_JAL  : next_pc <= op1;
    27              1                       2648                M_JALR : next_pc <= op1 + op2;
    28                                               		   
    29                                               		   // Standard RISC-V Branch Instructions
    30              1                       2674                M_BEQ  : next_pc <= (op1 == op2) ? pc + op3 : pc + 4;
    31              1                       2787                M_BNE  : next_pc <= (op1 != op2) ? pc + op3 : pc + 4;
    32              1                       2635                M_BLT  : next_pc <= (op1 < op2)  ? pc + op3 : pc + 4;
    33              1                       2503                M_BLTU : next_pc <= (unsigned'(op1) < unsigned'(op2)) ? pc + op3 : pc + 4;
    34              1                       2471                M_BGE  : next_pc <= (op1 >= op2) ? pc + op3 : pc + 4;
    35              1                       2665                M_BGEU : next_pc <= (unsigned'(op1) >= unsigned'(op2)) ? pc + op3 : pc + 4;
    36              1                      78905                default : next_pc <= pc + 4;
    37                                                        endcase
    38                                               	 //	 $display("[DUT] PC Updated: pc=%0h, ret_addr=%0h", pc, ret_addr);
    39                                                      end
    40                                                    end
    41                                                  end
    42                                                  mnemonic_t opcode;
    43              1                     100001        assign opcode = opc_base(instr);
    44                                                
    45                                               
    46                                                  //--------------------------------------------------------------------------
    47                                                  // Covergroup for branch instructions and resulting PC (pc_out)
    48                                                  //--------------------------------------------------------------------------
    49                                                  covergroup branch_cg @(posedge clk);
    50                                                    
    51                                                    coverpoint opcode {
    52                                                      bins instr[] = {JAL,JALR,BEQ,BNE,BLT,BLTU,BGE,BGEU};
    53                                                    }
    54                                                    // Cover the new PC (next_pc).
    55                                                    coverpoint next_pc {
    56                                                      ignore_bins zero = {0};   // branch of zero is pointless
    57                                                      bins positive = { [1:$] };
    58                                                      bins negative = { [$:-1] };
    59                                                    }
    60                                                    // Cross coverage 
    61                                                    cross opcode, next_pc;
    62                                                  endgroup
    63                                               
    64                                                  //--------------------------------------------------------------------------
    65                                                  // Covergroup for the computed return address (ret_addr)
    66                                                  //--------------------------------------------------------------------------
    67                                                  covergroup ret_cg @(posedge clk);
    68                                                    coverpoint ret_addr {
    69                                                      ignore_bins zero = {0};  // branch of zero is pointless
    70                                                      bins positive = { [1:$] };
    71                                                      bins negative = { [$:-1] };
    72                                                    }
    73                                                  endgroup
    74                                               
    75                                                  // Instantiate the covergroups
    76              1                          1        branch_cg branch_cg_inst = new();
    77                                                  // ret_cg ret_cg_inst = new();
    78                                               
    79                                               endmodule

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        555       359       196    64.68%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/branch_ctrl.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          5                                    rst           1           1                              100.00 
          5                                    clk           1           1                              100.00 
          7                          instr.j.rd[4]           1           1                              100.00 
          7                          instr.j.rd[3]           1           1                              100.00 
          7                          instr.j.rd[2]           1           1                              100.00 
          7                          instr.j.rd[1]           1           1                              100.00 
          7                          instr.j.rd[0]           1           1                              100.00 
          7                     instr.j.opcode1[6]           1           1                              100.00 
          7                     instr.j.opcode1[5]           1           1                              100.00 
          7                     instr.j.opcode1[4]           1           1                              100.00 
          7                     instr.j.opcode1[3]           1           1                              100.00 
          7                     instr.j.opcode1[2]           1           1                              100.00 
          7                     instr.j.opcode1[1]           0           0                                0.00 
          7                     instr.j.opcode1[0]           0           0                                0.00 
          7                           instr.j.imm3           1           1                              100.00 
          7                        instr.j.imm2[7]           1           1                              100.00 
          7                        instr.j.imm2[6]           1           1                              100.00 
          7                        instr.j.imm2[5]           1           1                              100.00 
          7                        instr.j.imm2[4]           1           1                              100.00 
          7                        instr.j.imm2[3]           1           1                              100.00 
          7                        instr.j.imm2[2]           1           1                              100.00 
          7                        instr.j.imm2[1]           1           1                              100.00 
          7                        instr.j.imm2[0]           1           1                              100.00 
          7                           instr.j.imm1           1           1                              100.00 
          7                        instr.j.imm0[9]           1           1                              100.00 
          7                        instr.j.imm0[8]           1           1                              100.00 
          7                        instr.j.imm0[7]           1           1                              100.00 
          7                        instr.j.imm0[6]           1           1                              100.00 
          7                        instr.j.imm0[5]           1           1                              100.00 
          7                        instr.j.imm0[4]           1           1                              100.00 
          7                        instr.j.imm0[3]           1           1                              100.00 
          7                        instr.j.imm0[2]           1           1                              100.00 
          7                        instr.j.imm0[1]           1           1                              100.00 
          7                        instr.j.imm0[0]           1           1                              100.00 
          8                                 op3[9]           1           1                              100.00 
          8                                 op3[8]           1           1                              100.00 
          8                                 op3[7]           1           1                              100.00 
          8                                 op3[6]           1           1                              100.00 
          8                                 op3[5]           1           1                              100.00 
          8                                 op3[4]           1           1                              100.00 
          8                                 op3[3]           1           1                              100.00 
          8                                op3[31]           1           1                              100.00 
          8                                op3[30]           1           1                              100.00 
          8                                 op3[2]           1           1                              100.00 
          8                                op3[29]           1           1                              100.00 
          8                                op3[28]           1           1                              100.00 
          8                                op3[27]           1           1                              100.00 
          8                                op3[26]           1           1                              100.00 
          8                                op3[25]           1           1                              100.00 
          8                                op3[24]           1           1                              100.00 
          8                                op3[23]           1           1                              100.00 
          8                                op3[22]           1           1                              100.00 
          8                                op3[21]           1           1                              100.00 
          8                                op3[20]           1           1                              100.00 
          8                                 op3[1]           1           1                              100.00 
          8                                op3[19]           1           1                              100.00 
          8                                op3[18]           1           1                              100.00 
          8                                op3[17]           1           1                              100.00 
          8                                op3[16]           1           1                              100.00 
          8                                op3[15]           1           1                              100.00 
          8                                op3[14]           1           1                              100.00 
          8                                op3[13]           1           1                              100.00 
          8                                op3[12]           1           1                              100.00 
          8                                op3[11]           1           1                              100.00 
          8                                op3[10]           1           1                              100.00 
          8                                 op3[0]           1           1                              100.00 
          8                                 op2[9]           1           1                              100.00 
          8                                 op2[8]           1           1                              100.00 
          8                                 op2[7]           1           1                              100.00 
          8                                 op2[6]           1           1                              100.00 
          8                                 op2[5]           1           1                              100.00 
          8                                 op2[4]           1           1                              100.00 
          8                                 op2[3]           1           1                              100.00 
          8                                op2[31]           1           1                              100.00 
          8                                op2[30]           1           1                              100.00 
          8                                 op2[2]           1           1                              100.00 
          8                                op2[29]           1           1                              100.00 
          8                                op2[28]           1           1                              100.00 
          8                                op2[27]           1           1                              100.00 
          8                                op2[26]           1           1                              100.00 
          8                                op2[25]           1           1                              100.00 
          8                                op2[24]           1           1                              100.00 
          8                                op2[23]           1           1                              100.00 
          8                                op2[22]           1           1                              100.00 
          8                                op2[21]           1           1                              100.00 
          8                                op2[20]           1           1                              100.00 
          8                                 op2[1]           1           1                              100.00 
          8                                op2[19]           1           1                              100.00 
          8                                op2[18]           1           1                              100.00 
          8                                op2[17]           1           1                              100.00 
          8                                op2[16]           1           1                              100.00 
          8                                op2[15]           1           1                              100.00 
          8                                op2[14]           1           1                              100.00 
          8                                op2[13]           1           1                              100.00 
          8                                op2[12]           1           1                              100.00 
          8                                op2[11]           1           1                              100.00 
          8                                op2[10]           1           1                              100.00 
          8                                 op2[0]           1           1                              100.00 
          8                                 op1[9]           1           1                              100.00 
          8                                 op1[8]           1           1                              100.00 
          8                                 op1[7]           1           1                              100.00 
          8                                 op1[6]           1           1                              100.00 
          8                                 op1[5]           1           1                              100.00 
          8                                 op1[4]           1           1                              100.00 
          8                                 op1[3]           1           1                              100.00 
          8                                op1[31]           1           1                              100.00 
          8                                op1[30]           1           1                              100.00 
          8                                 op1[2]           1           1                              100.00 
          8                                op1[29]           1           1                              100.00 
          8                                op1[28]           1           1                              100.00 
          8                                op1[27]           1           1                              100.00 
          8                                op1[26]           1           1                              100.00 
          8                                op1[25]           1           1                              100.00 
          8                                op1[24]           1           1                              100.00 
          8                                op1[23]           1           1                              100.00 
          8                                op1[22]           1           1                              100.00 
          8                                op1[21]           1           1                              100.00 
          8                                op1[20]           1           1                              100.00 
          8                                 op1[1]           1           1                              100.00 
          8                                op1[19]           1           1                              100.00 
          8                                op1[18]           1           1                              100.00 
          8                                op1[17]           1           1                              100.00 
          8                                op1[16]           1           1                              100.00 
          8                                op1[15]           1           1                              100.00 
          8                                op1[14]           1           1                              100.00 
          8                                op1[13]           1           1                              100.00 
          8                                op1[12]           1           1                              100.00 
          8                                op1[11]           1           1                              100.00 
          8                                op1[10]           1           1                              100.00 
          8                                 op1[0]           1           1                              100.00 
          9                                 enable           1           1                              100.00 
         10                              pc_out[9]           0           0                                0.00 
         10                              pc_out[8]           0           0                                0.00 
         10                              pc_out[7]           0           0                                0.00 
         10                              pc_out[6]           0           0                                0.00 
         10                              pc_out[5]           0           0                                0.00 
         10                              pc_out[4]           0           0                                0.00 
         10                              pc_out[3]           0           0                                0.00 
         10                             pc_out[31]           0           0                                0.00 
         10                             pc_out[30]           0           0                                0.00 
         10                              pc_out[2]           0           0                                0.00 
         10                             pc_out[29]           0           0                                0.00 
         10                             pc_out[28]           0           0                                0.00 
         10                             pc_out[27]           0           0                                0.00 
         10                             pc_out[26]           0           0                                0.00 
         10                             pc_out[25]           0           0                                0.00 
         10                             pc_out[24]           0           0                                0.00 
         10                             pc_out[23]           0           0                                0.00 
         10                             pc_out[22]           0           0                                0.00 
         10                             pc_out[21]           0           0                                0.00 
         10                             pc_out[20]           0           0                                0.00 
         10                              pc_out[1]           0           0                                0.00 
         10                             pc_out[19]           0           0                                0.00 
         10                             pc_out[18]           0           0                                0.00 
         10                             pc_out[17]           0           0                                0.00 
         10                             pc_out[16]           0           0                                0.00 
         10                             pc_out[15]           0           0                                0.00 
         10                             pc_out[14]           0           0                                0.00 
         10                             pc_out[13]           0           0                                0.00 
         10                             pc_out[12]           0           0                                0.00 
         10                             pc_out[11]           0           0                                0.00 
         10                             pc_out[10]           0           0                                0.00 
         10                              pc_out[0]           0           0                                0.00 
         11                            ret_addr[9]           0           0                                0.00 
         11                            ret_addr[8]           0           0                                0.00 
         11                            ret_addr[7]           0           0                                0.00 
         11                            ret_addr[6]           0           0                                0.00 
         11                            ret_addr[5]           0           0                                0.00 
         11                            ret_addr[4]           0           0                                0.00 
         11                            ret_addr[3]           0           0                                0.00 
         11                           ret_addr[31]           0           0                                0.00 
         11                           ret_addr[30]           0           0                                0.00 
         11                            ret_addr[2]           0           0                                0.00 
         11                           ret_addr[29]           0           0                                0.00 
         11                           ret_addr[28]           0           0                                0.00 
         11                           ret_addr[27]           0           0                                0.00 
         11                           ret_addr[26]           0           0                                0.00 
         11                           ret_addr[25]           0           0                                0.00 
         11                           ret_addr[24]           0           0                                0.00 
         11                           ret_addr[23]           0           0                                0.00 
         11                           ret_addr[22]           0           0                                0.00 
         11                           ret_addr[21]           0           0                                0.00 
         11                           ret_addr[20]           0           0                                0.00 
         11                            ret_addr[1]           0           0                                0.00 
         11                           ret_addr[19]           0           0                                0.00 
         11                           ret_addr[18]           0           0                                0.00 
         11                           ret_addr[17]           0           0                                0.00 
         11                           ret_addr[16]           0           0                                0.00 
         11                           ret_addr[15]           0           0                                0.00 
         11                           ret_addr[14]           0           0                                0.00 
         11                           ret_addr[13]           0           0                                0.00 
         11                           ret_addr[12]           0           0                                0.00 
         11                           ret_addr[11]           0           0                                0.00 
         11                           ret_addr[10]           0           0                                0.00 
         11                            ret_addr[0]           0           0                                0.00 
         13                                  pc[9]           0           0                                0.00 
         13                                  pc[8]           0           0                                0.00 
         13                                  pc[7]           0           0                                0.00 
         13                                  pc[6]           0           0                                0.00 
         13                                  pc[5]           0           0                                0.00 
         13                                  pc[4]           0           0                                0.00 
         13                                  pc[3]           0           0                                0.00 
         13                                 pc[31]           0           0                                0.00 
         13                                 pc[30]           0           0                                0.00 
         13                                  pc[2]           0           0                                0.00 
         13                                 pc[29]           0           0                                0.00 
         13                                 pc[28]           0           0                                0.00 
         13                                 pc[27]           0           0                                0.00 
         13                                 pc[26]           0           0                                0.00 
         13                                 pc[25]           0           0                                0.00 
         13                                 pc[24]           0           0                                0.00 
         13                                 pc[23]           0           0                                0.00 
         13                                 pc[22]           0           0                                0.00 
         13                                 pc[21]           0           0                                0.00 
         13                                 pc[20]           0           0                                0.00 
         13                                  pc[1]           0           0                                0.00 
         13                                 pc[19]           0           0                                0.00 
         13                                 pc[18]           0           0                                0.00 
         13                                 pc[17]           0           0                                0.00 
         13                                 pc[16]           0           0                                0.00 
         13                                 pc[15]           0           0                                0.00 
         13                                 pc[14]           0           0                                0.00 
         13                                 pc[13]           0           0                                0.00 
         13                                 pc[12]           0           0                                0.00 
         13                                 pc[11]           0           0                                0.00 
         13                                 pc[10]           0           0                                0.00 
         13                                  pc[0]           0           0                                0.00 
         13                             next_pc[9]           1           1                              100.00 
         13                             next_pc[8]           1           1                              100.00 
         13                             next_pc[7]           1           1                              100.00 
         13                             next_pc[6]           1           1                              100.00 
         13                             next_pc[5]           1           1                              100.00 
         13                             next_pc[4]           1           1                              100.00 
         13                             next_pc[3]           1           1                              100.00 
         13                            next_pc[31]           1           1                              100.00 
         13                            next_pc[30]           1           1                              100.00 
         13                             next_pc[2]           1           1                              100.00 
         13                            next_pc[29]           1           1                              100.00 
         13                            next_pc[28]           1           1                              100.00 
         13                            next_pc[27]           1           1                              100.00 
         13                            next_pc[26]           1           1                              100.00 
         13                            next_pc[25]           1           1                              100.00 
         13                            next_pc[24]           1           1                              100.00 
         13                            next_pc[23]           1           1                              100.00 
         13                            next_pc[22]           1           1                              100.00 
         13                            next_pc[21]           1           1                              100.00 
         13                            next_pc[20]           1           1                              100.00 
         13                             next_pc[1]           1           1                              100.00 
         13                            next_pc[19]           1           1                              100.00 
         13                            next_pc[18]           1           1                              100.00 
         13                            next_pc[17]           1           1                              100.00 
         13                            next_pc[16]           1           1                              100.00 
         13                            next_pc[15]           1           1                              100.00 
         13                            next_pc[14]           1           1                              100.00 
         13                            next_pc[13]           1           1                              100.00 
         13                            next_pc[12]           1           1                              100.00 
         13                            next_pc[11]           1           1                              100.00 
         13                            next_pc[10]           1           1                              100.00 
         13                             next_pc[0]           1           1                              100.00 
         42                                 opcode               ENUM type       Value       Count 
                                                                      ADDI           4      100.00 
                                                                      STLI           5      100.00 
                                                                     STLUI           6      100.00 
                                                                      ANDI           1      100.00 
                                                                       ORI          10      100.00 
                                                                      XORI           7      100.00 
                                                                      SLLI           6      100.00 
                                                                      SRLI           6      100.00 
                                                                      SRAI           7      100.00 
                                                                       LUI           4      100.00 
                                                                     AUIPC           2      100.00 
                                                                       ADD           9      100.00 
                                                                       SUB           7      100.00 
                                                                       STL           7      100.00 
                                                                      STLU           8      100.00 
                                                                       AND           6      100.00 
                                                                        OR          10      100.00 
                                                                       XOR           7      100.00 
                                                                       SLL           4      100.00 
                                                                       SRL           4      100.00 
                                                                       SRA           5      100.00 
                                                                       JAL           7      100.00 
                                                                      JALR           9      100.00 
                                                                       BEQ           4      100.00 
                                                                       BNE           7      100.00 
                                                                       BLT           6      100.00 
                                                                      BLTU           6      100.00 
                                                                       BGE           6      100.00 
                                                                      BGEU           5      100.00 
                                                                        LW           5      100.00 
                                                                        LH           3      100.00 
                                                                        LB           6      100.00 
                                                                       LHU           6      100.00 
                                                                       LBU           4      100.00 
                                                                        SW           2      100.00 
                                                                        SH           7      100.00 
                                                                        SB           4      100.00 

Total Node Count     =        296 
Toggled Node Count   =        198 
Untoggled Node Count =         98 

Toggle Coverage      =      64.68% (359 of 555 bins)

=================================================================================
=== File: ../design_rtl/decoder.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13        12         1    92.30%

================================Branch Details================================

Branch Coverage for file ../design_rtl/decoder.sv --

------------------------------------IF Branch------------------------------------
    32                                    200003     Count coming in to IF
    32              1                          3         if (rst) begin
    38              1                     200000         end else begin 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                    200000     Count coming in to IF
    39              1                      99999           if (enable) begin
                                          100001     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    57                                    276388     Count coming in to CASE
    58              1                      86538           is_r_type(instr_reg): begin
    62              1                      94467           is_i_type(instr_reg): begin
    66              1                      24179           is_si_type(instr_reg): begin
    70              1                      15702           is_s_type(instr_reg): begin
    75              1                      31470           is_b_type(instr_reg): begin
    80              1                      15894           is_u_type(instr_reg): begin
    83              1                       8133           is_j_type(instr_reg): begin
    86              1                    ***0***           (instr_reg == EBREAK) : op1 = '0;
                                               5     All False Count
Branch totals: 8 hits of 9 branches = 88.88%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      41        40         1    97.56%

================================Statement Details================================

Statement Coverage for file ../design_rtl/decoder.sv --

    1                                                import opcodes::*;
    2                                                
    3                                                module decoder #(
    4                                                   parameter random_errors= 0
    5                                                 )(
    6                                                  input logic clk, rst,
    7                                                
    8                                                  input wire instruction_t instr,
    9                                                  input logic enable,
    10                                                 input wire register_t register_bank[32],
    11                                               
    12                                                 output register_t op1, op2, op3, 
    13                                                 output register_num_t rd);
    14                                               
    15                                                 instruction_t instr_reg;
    16                                                 register_num_t rs1, rs2;
    17                                                 register_t imm;
    18                                               
    19                                                 function automatic register_t induce_errors(register_t data);
    20                                                   if (random_errors) begin
    21                                                     if ($urandom_range(1,10)==7)   // 10% of the time flip a bit at random
    22                                                       return data ^ register_t'(32'h1 << $urandom_range(0,31));
    23                                                   end
    24              1                     929163         return(data);
    25                                                 endfunction
    26                                               
    27                                                 string debug_opcode;
    28                                               
    29              1                     100001       assign debug_opcode = decode_instr(instr); 
    30                                               
    31              1                     200003       always_ff @(posedge clk) begin
    32                                                   if (rst) begin
    33              1                          3           rs1 <= '0;
    34              1                          3           rs2 <= '0;
    35              1                          3           imm <= '0;
    36              1                          3           rd <= '0;
    37              1                          3           instr_reg <= '0;
    38                                                   end else begin 
    39                                                     if (enable) begin
    40              1                      99999             rs1 <= get_rs1(instr);
    41              1                      99999             rs2 <= get_rs2(instr);
    42              1                      99999             imm <= get_imm(instr);
    43                                               `ifdef SYNTHESIS
    44                                                       rd  <= get_rd(instr);
    45                                               `else
    46              1                      99999             rd  <= register_num_t'(induce_errors(get_rd(instr)));
    47                                               `endif
    48              1                      99999             instr_reg <= instr;
    49                                                     end
    50                                                   end
    51                                                 end
    52                                               
    53              1                     276388       always_comb begin
    54              1                     276388         op1 = '0;
    55              1                     276388         op2 = '0;
    56              1                     276388         op3 = '0;
    57                                                   case (1)
    58                                                     is_r_type(instr_reg): begin
    59              1                      86538               op1 = register_bank[rs1];
    60              1                      86538               op2 = register_bank[rs2];
    61                                                       end
    62                                                     is_i_type(instr_reg): begin
    63              1                      94467               op1 = register_bank[rs1];
    64              1                      94467               op2 = imm;
    65                                                       end
    66                                                     is_si_type(instr_reg): begin
    67              1                      24179               op1 = register_bank[rs1];
    68              1                      24179               op2 = imm;
    69                                                       end
    70                                                     is_s_type(instr_reg): begin
    71              1                      15702               op1 = register_bank[rs1]; 
    72              1                      15702               op2 = imm;                
    73              1                      15702               op3 = register_bank[rs2]; 
    74                                                       end
    75                                                     is_b_type(instr_reg): begin
    76              1                      31470               op1 = register_bank[rs1];
    77              1                      31470               op2 = register_bank[rs2];
    78              1                      31470               op3 = imm;
    79                                                       end
    80                                                     is_u_type(instr_reg): begin
    81              1                      15894               op1 = imm; 
    82                                                       end
    83                                                     is_j_type(instr_reg): begin
    84              1                       8133               op1 = imm; 
    85                                                       end
    86              1                    ***0***           (instr_reg == EBREAK) : op1 = '0;
    87                                                     //  default: $error("invalid opcode in decoder: %x ", instr);
    88                                                   endcase
    89                                               `ifndef SYNTHESIS
    90              1                     276388         op1 = induce_errors(op1);
    91              1                     276388         op2 = induce_errors(op2);
    92              1                     276388         op3 = induce_errors(op3);
    93                                               `endif
    94                                                 end 
    95                                               
    96                                               
    97                                                  mnemonic_t opcode;
    98              1                     100001        assign opcode = opc_base(instr);
    99                                               
    100                                                 covergroup opcodes_cg @(posedge clk);
    101                                                   coverpoint opcode {
    102                                                      bins instr[] = {
    103                                                           ADD, SUB, AND, OR, XOR, SLL, SRA, STL, STLU, 
    104                                                           ADDI, ANDI, ORI,  XORI, SLLI, SRAI, STL, STLU, LW, LH, LHU, LB, LBU, JALR,
    105                                                           STLI, STLUI,
    106                                                           LUI, AUIPC,
    107                                                           SW, SH, SB,
    108                                                           BEQ, BNE, BLT, BGE, BLTU, BGEU,
    109                                                           JAL };
    110                                                   }
    111                                                 endgroup
    112                                              
    113                                                 covergroup regs_cg @(posedge clk);
    114                                                   coverpoint opcode {
    115                                                     bins r_type = { ADD, SUB, AND, OR, XOR, SLL, SRA, STL, STLU };
    116                                                     bins i_type = { ADDI, ANDI, ORI,  XORI, SLLI, SRAI, STL, STLU, LW, LH, LHU, LB, LBU, JALR };
    117                                                     bins si_type = { STLI, STLUI };
    118                                                     bins u_type = { LUI, AUIPC };
    119                                                     bins s_type = { SW, SH, SB };
    120                                                     bins b_type = { BEQ, BNE, BLT, BGE, BLTU, BGEU };
    121                                                     bins j_type = { JAL };
    122                                                   }
    123                                                   coverpoint rs1 {
    124                                                     bins n[4] = {[0:31]};
    125                                                   }
    126                                                   coverpoint rs2 {
    127                                                     bins n[4] = {[0:31]};
    128                                                   }
    129                                                   coverpoint rd {
    130                                                     bins n[4] = {[0:31]};
    131                                                   }
    132                                                   cross opcode, rs1, rs2, rd;
    133                                                 endgroup
    134                                              
    135                                                 covergroup one_operand_cg @(posedge clk);
    136                                                   coverpoint opcode {
    137                                                     bins one_operand = { JAL, LUI, AUIPC };
    138                                                   }
    139                                                   coverpoint op1 {
    140                                                     bins negative = {[$:-1]};
    141                                                     bins zero     = { 0 };
    142                                                     bins positive = {[1:$]};
    143                                                   }
    144                                                   cross opcode, op1;
    145                                                 endgroup
    146                                              
    147                                                 covergroup two_operand_cg @(posedge clk);
    148                                                   coverpoint opcode {
    149                                                     bins two_operand = {
    150                                                            ADD, SUB, AND, OR, XOR, SLL, SRA, STL, STLU,
    151                                                            ADDI, ANDI, ORI,  XORI, SLLI, SRAI, STL, STLU, LW, LH, LHU, LB, LBU, JALR,
    152                                                            STLI, STLUI };
    153                                                   }
    154                                                   coverpoint op1 {
    155                                                     bins negative = {[$:-1]};
    156                                                     bins zero     = { 0 };
    157                                                     bins positive = {[1:$]};
    158                                                   }
    159                                                   coverpoint op2 {
    160                                                     bins negative = {[$:-1]};
    161                                                     bins zero     = { 0 };
    162                                                     bins positive = {[1:$]};
    163                                                   }
    164                                                   cross opcode, op1, op2;
    165                                                 endgroup
    166                                              
    167                                                 covergroup three_operand_cg @(posedge clk);
    168                                                   coverpoint opcode {
    169                                                     bins three_operand = { SW, SH, SB, BEQ, BNE, BLT, BGE, BLTU, BGEU };
    170                                                   }
    171                                                   coverpoint op1 {
    172                                                     bins negative = {[$:-1]};
    173                                                     bins zero     = { 0 };
    174                                                     bins positive = {[1:$]};
    175                                                   }
    176                                                   coverpoint op2 {
    177                                                     bins negative = {[$:-1]};
    178                                                     bins zero     = { 0 };
    179                                                     bins positive = {[1:$]};
    180                                                   }
    181                                                   coverpoint op3 {
    182                                                     bins negative = {[$:-1]};
    183                                                     bins zero     = { 0 };
    184                                                     bins positive = {[1:$]};
    185                                                   }
    186                                                   cross opcode, op1, op2, op3;
    187                                                 endgroup
    188                                              
    189             1                          1        opcodes_cg        opcodes_inst       = new();
    190             1                          1        regs_cg           regs_inst          = new();
    191             1                          1        one_operand_cg    one_operand_inst   = new();
    192             1                          1        two_operand_cg    two_operand_inst   = new();
    193             1                          1        three_operand_cg  three_operand_inst = new();
    194                                              
    195                                              endmodule
    196                                              

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        457       451         6    98.68%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/decoder.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          6                                    rst           1           1                              100.00 
          6                                    clk           1           1                              100.00 
          8                          instr.j.rd[4]           1           1                              100.00 
          8                          instr.j.rd[3]           1           1                              100.00 
          8                          instr.j.rd[2]           1           1                              100.00 
          8                          instr.j.rd[1]           1           1                              100.00 
          8                          instr.j.rd[0]           1           1                              100.00 
          8                     instr.j.opcode1[6]           1           1                              100.00 
          8                     instr.j.opcode1[5]           1           1                              100.00 
          8                     instr.j.opcode1[4]           1           1                              100.00 
          8                     instr.j.opcode1[3]           1           1                              100.00 
          8                     instr.j.opcode1[2]           1           1                              100.00 
          8                     instr.j.opcode1[1]           0           0                                0.00 
          8                     instr.j.opcode1[0]           0           0                                0.00 
          8                           instr.j.imm3           1           1                              100.00 
          8                        instr.j.imm2[7]           1           1                              100.00 
          8                        instr.j.imm2[6]           1           1                              100.00 
          8                        instr.j.imm2[5]           1           1                              100.00 
          8                        instr.j.imm2[4]           1           1                              100.00 
          8                        instr.j.imm2[3]           1           1                              100.00 
          8                        instr.j.imm2[2]           1           1                              100.00 
          8                        instr.j.imm2[1]           1           1                              100.00 
          8                        instr.j.imm2[0]           1           1                              100.00 
          8                           instr.j.imm1           1           1                              100.00 
          8                        instr.j.imm0[9]           1           1                              100.00 
          8                        instr.j.imm0[8]           1           1                              100.00 
          8                        instr.j.imm0[7]           1           1                              100.00 
          8                        instr.j.imm0[6]           1           1                              100.00 
          8                        instr.j.imm0[5]           1           1                              100.00 
          8                        instr.j.imm0[4]           1           1                              100.00 
          8                        instr.j.imm0[3]           1           1                              100.00 
          8                        instr.j.imm0[2]           1           1                              100.00 
          8                        instr.j.imm0[1]           1           1                              100.00 
          8                        instr.j.imm0[0]           1           1                              100.00 
          9                                 enable           1           1                              100.00 
         12                                 op3[9]           1           1                              100.00 
         12                                 op3[8]           1           1                              100.00 
         12                                 op3[7]           1           1                              100.00 
         12                                 op3[6]           1           1                              100.00 
         12                                 op3[5]           1           1                              100.00 
         12                                 op3[4]           1           1                              100.00 
         12                                 op3[3]           1           1                              100.00 
         12                                op3[31]           1           1                              100.00 
         12                                op3[30]           1           1                              100.00 
         12                                 op3[2]           1           1                              100.00 
         12                                op3[29]           1           1                              100.00 
         12                                op3[28]           1           1                              100.00 
         12                                op3[27]           1           1                              100.00 
         12                                op3[26]           1           1                              100.00 
         12                                op3[25]           1           1                              100.00 
         12                                op3[24]           1           1                              100.00 
         12                                op3[23]           1           1                              100.00 
         12                                op3[22]           1           1                              100.00 
         12                                op3[21]           1           1                              100.00 
         12                                op3[20]           1           1                              100.00 
         12                                 op3[1]           1           1                              100.00 
         12                                op3[19]           1           1                              100.00 
         12                                op3[18]           1           1                              100.00 
         12                                op3[17]           1           1                              100.00 
         12                                op3[16]           1           1                              100.00 
         12                                op3[15]           1           1                              100.00 
         12                                op3[14]           1           1                              100.00 
         12                                op3[13]           1           1                              100.00 
         12                                op3[12]           1           1                              100.00 
         12                                op3[11]           1           1                              100.00 
         12                                op3[10]           1           1                              100.00 
         12                                 op3[0]           1           1                              100.00 
         12                                 op2[9]           1           1                              100.00 
         12                                 op2[8]           1           1                              100.00 
         12                                 op2[7]           1           1                              100.00 
         12                                 op2[6]           1           1                              100.00 
         12                                 op2[5]           1           1                              100.00 
         12                                 op2[4]           1           1                              100.00 
         12                                 op2[3]           1           1                              100.00 
         12                                op2[31]           1           1                              100.00 
         12                                op2[30]           1           1                              100.00 
         12                                 op2[2]           1           1                              100.00 
         12                                op2[29]           1           1                              100.00 
         12                                op2[28]           1           1                              100.00 
         12                                op2[27]           1           1                              100.00 
         12                                op2[26]           1           1                              100.00 
         12                                op2[25]           1           1                              100.00 
         12                                op2[24]           1           1                              100.00 
         12                                op2[23]           1           1                              100.00 
         12                                op2[22]           1           1                              100.00 
         12                                op2[21]           1           1                              100.00 
         12                                op2[20]           1           1                              100.00 
         12                                 op2[1]           1           1                              100.00 
         12                                op2[19]           1           1                              100.00 
         12                                op2[18]           1           1                              100.00 
         12                                op2[17]           1           1                              100.00 
         12                                op2[16]           1           1                              100.00 
         12                                op2[15]           1           1                              100.00 
         12                                op2[14]           1           1                              100.00 
         12                                op2[13]           1           1                              100.00 
         12                                op2[12]           1           1                              100.00 
         12                                op2[11]           1           1                              100.00 
         12                                op2[10]           1           1                              100.00 
         12                                 op2[0]           1           1                              100.00 
         12                                 op1[9]           1           1                              100.00 
         12                                 op1[8]           1           1                              100.00 
         12                                 op1[7]           1           1                              100.00 
         12                                 op1[6]           1           1                              100.00 
         12                                 op1[5]           1           1                              100.00 
         12                                 op1[4]           1           1                              100.00 
         12                                 op1[3]           1           1                              100.00 
         12                                op1[31]           1           1                              100.00 
         12                                op1[30]           1           1                              100.00 
         12                                 op1[2]           1           1                              100.00 
         12                                op1[29]           1           1                              100.00 
         12                                op1[28]           1           1                              100.00 
         12                                op1[27]           1           1                              100.00 
         12                                op1[26]           1           1                              100.00 
         12                                op1[25]           1           1                              100.00 
         12                                op1[24]           1           1                              100.00 
         12                                op1[23]           1           1                              100.00 
         12                                op1[22]           1           1                              100.00 
         12                                op1[21]           1           1                              100.00 
         12                                op1[20]           1           1                              100.00 
         12                                 op1[1]           1           1                              100.00 
         12                                op1[19]           1           1                              100.00 
         12                                op1[18]           1           1                              100.00 
         12                                op1[17]           1           1                              100.00 
         12                                op1[16]           1           1                              100.00 
         12                                op1[15]           1           1                              100.00 
         12                                op1[14]           1           1                              100.00 
         12                                op1[13]           1           1                              100.00 
         12                                op1[12]           1           1                              100.00 
         12                                op1[11]           1           1                              100.00 
         12                                op1[10]           1           1                              100.00 
         12                                 op1[0]           1           1                              100.00 
         13                                  rd[4]           1           1                              100.00 
         13                                  rd[3]           1           1                              100.00 
         13                                  rd[2]           1           1                              100.00 
         13                                  rd[1]           1           1                              100.00 
         13                                  rd[0]           1           1                              100.00 
         15                           instr_reg[9]           1           1                              100.00 
         15                           instr_reg[8]           1           1                              100.00 
         15                           instr_reg[7]           1           1                              100.00 
         15                           instr_reg[6]           1           1                              100.00 
         15                           instr_reg[5]           1           1                              100.00 
         15                           instr_reg[4]           1           1                              100.00 
         15                           instr_reg[3]           1           1                              100.00 
         15                          instr_reg[31]           1           1                              100.00 
         15                          instr_reg[30]           1           1                              100.00 
         15                           instr_reg[2]           1           1                              100.00 
         15                          instr_reg[29]           1           1                              100.00 
         15                          instr_reg[28]           1           1                              100.00 
         15                          instr_reg[27]           1           1                              100.00 
         15                          instr_reg[26]           1           1                              100.00 
         15                          instr_reg[25]           1           1                              100.00 
         15                          instr_reg[24]           1           1                              100.00 
         15                          instr_reg[23]           1           1                              100.00 
         15                          instr_reg[22]           1           1                              100.00 
         15                          instr_reg[21]           1           1                              100.00 
         15                          instr_reg[20]           1           1                              100.00 
         15                           instr_reg[1]           0           1                               50.00 
         15                          instr_reg[19]           1           1                              100.00 
         15                          instr_reg[18]           1           1                              100.00 
         15                          instr_reg[17]           1           1                              100.00 
         15                          instr_reg[16]           1           1                              100.00 
         15                          instr_reg[15]           1           1                              100.00 
         15                          instr_reg[14]           1           1                              100.00 
         15                          instr_reg[13]           1           1                              100.00 
         15                          instr_reg[12]           1           1                              100.00 
         15                          instr_reg[11]           1           1                              100.00 
         15                          instr_reg[10]           1           1                              100.00 
         15                           instr_reg[0]           0           1                               50.00 
         16                                 rs2[4]           1           1                              100.00 
         16                                 rs2[3]           1           1                              100.00 
         16                                 rs2[2]           1           1                              100.00 
         16                                 rs2[1]           1           1                              100.00 
         16                                 rs2[0]           1           1                              100.00 
         16                                 rs1[4]           1           1                              100.00 
         16                                 rs1[3]           1           1                              100.00 
         16                                 rs1[2]           1           1                              100.00 
         16                                 rs1[1]           1           1                              100.00 
         16                                 rs1[0]           1           1                              100.00 
         17                                 imm[9]           1           1                              100.00 
         17                                 imm[8]           1           1                              100.00 
         17                                 imm[7]           1           1                              100.00 
         17                                 imm[6]           1           1                              100.00 
         17                                 imm[5]           1           1                              100.00 
         17                                 imm[4]           1           1                              100.00 
         17                                 imm[3]           1           1                              100.00 
         17                                imm[31]           1           1                              100.00 
         17                                imm[30]           1           1                              100.00 
         17                                 imm[2]           1           1                              100.00 
         17                                imm[29]           1           1                              100.00 
         17                                imm[28]           1           1                              100.00 
         17                                imm[27]           1           1                              100.00 
         17                                imm[26]           1           1                              100.00 
         17                                imm[25]           1           1                              100.00 
         17                                imm[24]           1           1                              100.00 
         17                                imm[23]           1           1                              100.00 
         17                                imm[22]           1           1                              100.00 
         17                                imm[21]           1           1                              100.00 
         17                                imm[20]           1           1                              100.00 
         17                                 imm[1]           1           1                              100.00 
         17                                imm[19]           1           1                              100.00 
         17                                imm[18]           1           1                              100.00 
         17                                imm[17]           1           1                              100.00 
         17                                imm[16]           1           1                              100.00 
         17                                imm[15]           1           1                              100.00 
         17                                imm[14]           1           1                              100.00 
         17                                imm[13]           1           1                              100.00 
         17                                imm[12]           1           1                              100.00 
         17                                imm[11]           1           1                              100.00 
         17                                imm[10]           1           1                              100.00 
         17                                 imm[0]           1           1                              100.00 
         97                                 opcode               ENUM type       Value       Count 
                                                                      ADDI           4      100.00 
                                                                      STLI           5      100.00 
                                                                     STLUI           6      100.00 
                                                                      ANDI           1      100.00 
                                                                       ORI          10      100.00 
                                                                      XORI           7      100.00 
                                                                      SLLI           6      100.00 
                                                                      SRLI           6      100.00 
                                                                      SRAI           7      100.00 
                                                                       LUI           4      100.00 
                                                                     AUIPC           2      100.00 
                                                                       ADD           9      100.00 
                                                                       SUB           7      100.00 
                                                                       STL           7      100.00 
                                                                      STLU           8      100.00 
                                                                       AND           6      100.00 
                                                                        OR          10      100.00 
                                                                       XOR           7      100.00 
                                                                       SLL           4      100.00 
                                                                       SRL           4      100.00 
                                                                       SRA           5      100.00 
                                                                       JAL           7      100.00 
                                                                      JALR           9      100.00 
                                                                       BEQ           4      100.00 
                                                                       BNE           7      100.00 
                                                                       BLT           6      100.00 
                                                                      BLTU           6      100.00 
                                                                       BGE           6      100.00 
                                                                      BGEU           5      100.00 
                                                                        LW           5      100.00 
                                                                        LH           3      100.00 
                                                                        LB           6      100.00 
                                                                       LHU           6      100.00 
                                                                       LBU           4      100.00 
                                                                        SW           2      100.00 
                                                                        SH           7      100.00 
                                                                        SB           4      100.00 

Total Node Count     =        247 
Toggled Node Count   =        243 
Untoggled Node Count =          4 

Toggle Coverage      =      98.68% (451 of 457 bins)

=================================================================================
=== File: ../design_rtl/memory_ctrl.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        58        53         5    91.37%

================================Branch Details================================

Branch Coverage for file ../design_rtl/memory_ctrl.sv --

------------------------------------IF Branch------------------------------------
    49                                    399999     Count coming in to IF
    49              1                          2          if (rst) state <= ADDR_PHASE; 
    50              1                     399997          else state <= next_state;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    53                                    426246     Count coming in to CASE
    54              1                     213122            ADDR_PHASE : if (enable) next_state = DATA_PHASE; else next_state = ADDR_PHASE;
    55              1                      99999            DATA_PHASE : if ((read_op & read_ack) || (!read_op & write_ack)) next_state = DONE;
    56              1                     113122            DONE       : next_state = ADDR_PHASE;
                                               3     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    54                                    213122     Count coming in to IF
    54              2                     113122            ADDR_PHASE : if (enable) next_state = DATA_PHASE; else next_state = ADDR_PHASE;
    54              3                     100000            ADDR_PHASE : if (enable) next_state = DATA_PHASE; else next_state = ADDR_PHASE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    55                                     99999     Count coming in to IF
    55              2                      99999            DATA_PHASE : if ((read_op & read_ack) || (!read_op & write_ack)) next_state = DONE;
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                    441951     Count coming in to IF
    67              1                          5          if (rst) result_reg <= '0;
    68              1                      13123          else if ((state == DATA_PHASE) & (read_op & read_ack)) begin 
                                          428823     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                     13123     Count coming in to IF
    69              1                       5270            if (sign_ex) begin
    73              1                       7853            end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                      5270     Count coming in to IF
    70              1                    ***0***              if (size == 4) result_reg <= read_data;
                                            5270     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    71                                      5270     Count coming in to IF
    71              1                       2616              if (size == 2) result_reg <= signed_short'((read_data >> (8 * offset)) & 32'h0000FFFF);
                                            2654     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                      5270     Count coming in to IF
    72              1                       2654              if (size == 1) result_reg <= signed_byte'((read_data >> (8 * offset)) & 32'h000000FF);
                                            2616     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    74                                      7853     Count coming in to IF
    74              1                       2639              if (size == 4) result_reg <= read_data;
                                            5214     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                      7853     Count coming in to IF
    75              1                       2565              if (size == 2) result_reg <= unsigned_short'((read_data >> (8 * offset)) & 32'h0000FFFF);
                                            5288     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    76                                      7853     Count coming in to IF
    76              1                       2649              if (size == 1) result_reg <= unsigned_byte'((read_data >> (8 * offset)) & 32'h000000FF);
                                            5204     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    85                                     57274     Count coming in to IF
    85              1                      43761        assign write_byte_enable = (!write_op) ? '0 :
    86              1                      13513                                   (size == 4) ? 4'hF :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    86                                     13513     Count coming in to IF
    86              2                       4407                                   (size == 4) ? 4'hF :
    87              1                       9106                                   (size == 2) ? 4'h3 << offset :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                      9106     Count coming in to IF
    87              2                       4408                                   (size == 2) ? 4'h3 << offset :
    88              1                       4698                                   (size == 1) ? 4'h1 << offset : '0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    88                                      4698     Count coming in to IF
    88              2                       4698                                   (size == 1) ? 4'h1 << offset : '0;
    88              3                    ***0***                                   (size == 1) ? 4'h1 << offset : '0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    91                                     60158     Count coming in to IF
    91              1                      44515        assign write_data = (!write_op) ? '0 :
    92              1                      15643                            (size == 4) ? wdata :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    92                                     15643     Count coming in to IF
    92              2                       5194                            (size == 4) ? wdata :
    93              1                      10449                            (size == 2) ? (wdata & 32'h0000FFFF) << (offset * 8) :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    93                                     10449     Count coming in to IF
    93              2                       5096                            (size == 2) ? (wdata & 32'h0000FFFF) << (offset * 8) :
    94              1                       5353                            (size == 1) ? (wdata & 32'h000000FF) << (offset * 8) : '0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    94                                      5353     Count coming in to IF
    94              2                       5353                            (size == 1) ? (wdata & 32'h000000FF) << (offset * 8) : '0;
    94              3                    ***0***                            (size == 1) ? (wdata & 32'h000000FF) << (offset * 8) : '0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    97                                    693664     Count coming in to IF
    97              1                          4          if (rst) begin 
    104             1                     693660          end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    105                                   693660     Count coming in to IF
    105             1                     102944            if (state == DONE) begin
                                          590716     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    113                                   693660     Count coming in to IF
    113             1                      41947            if (enable & is_memory_op(instr)) begin
                                          651713     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    122                                    41947     Count coming in to CASE
    123             1                       5277                M_LW   : begin  size = 4;  read_op  = 1; sign_ex = 0; end
    124             1                       5232                M_LH   : begin  size = 2;  read_op  = 1; sign_ex = 1; end
    125             1                       5130                M_LHU  : begin  size = 2;  read_op  = 1; sign_ex = 0; end
    126             1                       5308                M_LB   : begin  size = 1;  read_op  = 1; sign_ex = 1; end
    127             1                       5298                M_LBU  : begin  size = 1;  read_op  = 1; sign_ex = 0; end
    128             1                       5218                M_SW   : begin  size = 4;  write_op = 1; sign_ex = 0; end
    129             1                       5116                M_SH   : begin  size = 2;  write_op = 1; sign_ex = 0; end
    130             1                       5368                M_SB   : begin  size = 1;  write_op = 1; sign_ex = 0; end
                                         ***0***     All False Count
Branch totals: 8 hits of 9 branches = 88.88%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      21        14         7    66.66%

================================Condition Details================================

Condition Coverage for file ../design_rtl/memory_ctrl.sv --

-----------Focused Condition View (Bimodal)--------------
Line       55 Item    1  ((read_op & read_ack) || (~read_op & write_ack))
Condition totals: 0 of 3 input terms covered = 0.00%

   Input Term   Covered  Reason for no coverage                  Hint
  -----------  --------  --------------------------------------  --------------
      read_op         N  Both rows hit for same output ->1      Hit either row for output ->0
     read_ack         N  '_1' hit but '_0' is not hit           Hit '_0' for output ->0
    write_ack         N  '_1' hit but '_0' is not hit           Hit '_0' for output ->0

    Rows:   Hits(->0)   Hits(->1)  FEC Target            Non-masking condition(s)                        

---------  ----------  ----------  --------------------  -------------------------                       
 Row   1:           0           1  read_op_0             (~(~read_op & write_ack) && read_ack), write_ack
 Row   2:           0           1  read_op_1             read_ack, (~(read_op & read_ack) && write_ack)  
 Row   3:           0           0  read_ack_0            read_op                                         
 Row   4:           0           1  read_ack_1            read_op                                         
 Row   5:           0           0  write_ack_0           ~read_op                                        
 Row   6:           0           1  write_ack_1           ~read_op                                        

----------------Focused Condition View-------------------
Line       68 Item    1  (((state == DATA_PHASE) & read_op) & read_ack)
Condition totals: 2 of 3 input terms covered = 66.66%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (state == DATA_PHASE)         Y
                read_op         Y
               read_ack         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (state == DATA_PHASE)_0  (read_ack && read_op)         
  Row   2:          1  (state == DATA_PHASE)_1  (read_ack && read_op)         
  Row   3:          1  read_op_0                (read_ack && (state == DATA_PHASE))
  Row   4:          1  read_op_1                (read_ack && (state == DATA_PHASE))
  Row   5:    ***0***  read_ack_0               ((state == DATA_PHASE) & read_op)
  Row   6:          1  read_ack_1               ((state == DATA_PHASE) & read_op)

----------------Focused Condition View-------------------
Line       70 Item    1  (size == 4)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 4)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 4)_0         -                             
  Row   2:    ***0***  (size == 4)_1         -                             

----------------Focused Condition View-------------------
Line       71 Item    1  (size == 2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 2)_0         -                             
  Row   2:          1  (size == 2)_1         -                             

----------------Focused Condition View-------------------
Line       72 Item    1  (size == 1)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 1)_0         -                             
  Row   2:          1  (size == 1)_1         -                             

----------------Focused Condition View-------------------
Line       74 Item    1  (size == 4)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 4)_0         -                             
  Row   2:          1  (size == 4)_1         -                             

----------------Focused Condition View-------------------
Line       75 Item    1  (size == 2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 2)_0         -                             
  Row   2:          1  (size == 2)_1         -                             

----------------Focused Condition View-------------------
Line       76 Item    1  (size == 1)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 1)_0         -                             
  Row   2:          1  (size == 1)_1         -                             

----------------Focused Condition View-------------------
Line       86 Item    1  (size == 4)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 4)_0         -                             
  Row   2:          1  (size == 4)_1         -                             

----------------Focused Condition View-------------------
Line       87 Item    1  (size == 2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 2)_0         -                             
  Row   2:          1  (size == 2)_1         -                             

----------------Focused Condition View-------------------
Line       88 Item    1  (size == 1)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 1)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (size == 1)_0         -                             
  Row   2:          1  (size == 1)_1         -                             

----------------Focused Condition View-------------------
Line       92 Item    1  (size == 4)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 4)_0         -                             
  Row   2:          1  (size == 4)_1         -                             

----------------Focused Condition View-------------------
Line       93 Item    1  (size == 2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 2)_0         -                             
  Row   2:          1  (size == 2)_1         -                             

----------------Focused Condition View-------------------
Line       94 Item    1  (size == 1)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 1)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (size == 1)_0         -                             
  Row   2:          1  (size == 1)_1         -                             

----------------Focused Condition View-------------------
Line       105 Item    1  (state == DONE)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (state == DONE)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state == DONE)_0     -                             
  Row   2:          1  (state == DONE)_1     -                             

----------------Focused Condition View-------------------
Line       113 Item    1  (enable & is_memory_op(instr))
Condition totals: 2 of 2 input terms covered = 100.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
               enable         Y
  is_memory_op(instr)         Y

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  enable_0               is_memory_op(instr)           
  Row   2:          1  enable_1               is_memory_op(instr)           
  Row   3:          1  is_memory_op(instr)_0  enable                        
  Row   4:          1  is_memory_op(instr)_1  enable                        


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      7         6         1    85.71%

================================Expression Details================================

Expression Coverage for file ../design_rtl/memory_ctrl.sv --

----------------Focused Expression View-----------------
Line       82 Item    1  ((read_op & read_ack) & (state == DATA_PHASE))
Expression totals: 2 of 3 input terms covered = 66.66%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                read_op         Y
               read_ack         N  '_0' not hit             Hit '_0'
  (state == DATA_PHASE)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  read_op_0                ((state == DATA_PHASE) && read_ack)
  Row   2:          1  read_op_1                ((state == DATA_PHASE) && read_ack)
  Row   3:    ***0***  read_ack_0               ((state == DATA_PHASE) && read_op)
  Row   4:          1  read_ack_1               ((state == DATA_PHASE) && read_op)
  Row   5:          1  (state == DATA_PHASE)_0  (read_op & read_ack)          
  Row   6:          1  (state == DATA_PHASE)_1  (read_op & read_ack)          

----------------Focused Expression View-----------------
Line       83 Item    1  (read_op & (state == ADDR_PHASE))
Expression totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                read_op         Y
  (state == ADDR_PHASE)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  read_op_0                (state == ADDR_PHASE)         
  Row   2:          1  read_op_1                (state == ADDR_PHASE)         
  Row   3:          1  (state == ADDR_PHASE)_0  read_op                       
  Row   4:          1  (state == ADDR_PHASE)_1  read_op                       

----------------Focused Expression View-----------------
Line       84 Item    1  (write_op & (state == ADDR_PHASE))
Expression totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
               write_op         Y
  (state == ADDR_PHASE)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  write_op_0               (state == ADDR_PHASE)         
  Row   2:          1  write_op_1               (state == ADDR_PHASE)         
  Row   3:          1  (state == ADDR_PHASE)_0  write_op                      
  Row   4:          1  (state == ADDR_PHASE)_1  write_op                      


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       3         3         0   100.00%
    FSM Transitions                  4         3         1    75.00%

================================FSM Details================================

FSM Coverage for file ../design_rtl/memory_ctrl.sv --

FSM_ID: state
    Current State Object : state
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  54          ADDR_PHASE                   0
  55          DATA_PHASE                   1
  56                DONE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
              ADDR_PHASE              200000          
              DATA_PHASE               99999          
                    DONE               99999          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  54                   0               99999          ADDR_PHASE -> DATA_PHASE          
  55                   1               99999          DATA_PHASE -> DONE            
  56                   3               99999          DONE -> ADDR_PHASE            
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  49                   2          DATA_PHASE -> ADDR_PHASE


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   3         3         0   100.00%
        FSM Transitions              4         3         1    75.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      67        66         1    98.50%

================================Statement Details================================

Statement Coverage for file ../design_rtl/memory_ctrl.sv --

    1                                                
    2                                                import opcodes::*;
    3                                                
    4                                                module memory_ctrl #(
    5                                                   parameter random_errors = 0
    6                                                 )(
    7                                                   input logic          clk, rst,
    8                                                
    9                                                   input wire instruction_t  instr,
    10                                                  input register_t     op1, op2, op3,
    11                                                  input logic          enable,
    12                                                  output register_t    result,
    13                                                  output logic         result_valid,
    14                                               
    15                                                  output logic [31:0]  address,
    16                                                  output logic         read_enable,
    17                                                  input  logic [31:0]  read_data,
    18                                                  input  logic         read_ack,
    19                                                  output logic         write_enable,
    20                                                  output logic [3:0]   write_byte_enable,
    21                                                  output logic [31:0]  write_data,
    22                                                  input  logic         write_ack);
    23                                               
    24                                                  typedef enum logic[2:0] { ADDR_PHASE, DATA_PHASE, DONE } state_t;
    25                                               
    26                                                  typedef logic unsigned [15:0]  unsigned_short;
    27                                                  typedef logic signed   [15:0]  signed_short;
    28                                                  typedef logic unsigned  [7:0]  unsigned_byte;
    29                                                  typedef logic signed    [7:0]  signed_byte; 
    30                                               
    31                                                  state_t state, next_state;
    32                                                  logic read_op, write_op;
    33                                                  logic read_instr, write_instr;
    34                                                  logic sign_ex;
    35                                                  logic [1:0] offset;
    36                                                  logic [2:0] size;
    37                                                  register_t wdata;
    38                                                  register_t result_reg;
    39                                               
    40                                                  function automatic register_t induce_errors(register_t data);
    41                                                    if (random_errors) begin
    42                                                      if ($urandom_range(1,10)==7)   // 10% of the time flip a bit at random 
    43                                                        return data ^ register_t'(32'h1 << $urandom_range(0,31));
    44                                                    end 
    45              1                      55065          return(data);
    46                                                  endfunction
    47                                               
    48              1                     399999        always_ff @(posedge clk) 
    49              1                          2          if (rst) state <= ADDR_PHASE; 
    50              1                     399997          else state <= next_state;
    51                                               
    52              1                     426246        always_comb begin
    53                                                    case (state) 
    54              1                     113122            ADDR_PHASE : if (enable) next_state = DATA_PHASE; else next_state = ADDR_PHASE;
    54              2                     100000     
    55              1                      99999            DATA_PHASE : if ((read_op & read_ack) || (!read_op & write_ack)) next_state = DONE;
    56              1                     113122            DONE       : next_state = ADDR_PHASE;
    57                                                    endcase
    58                                                  end
    59                                               
    60                                               `ifndef SYNTHESIS
    61              1                      13118        assign result = induce_errors(result_reg);
    62                                               `else
    63                                                  assign result = result_reg;
    64                                               `endif
    65                                               
    66              1                     441951        always_comb begin 
    67              1                          5          if (rst) result_reg <= '0;
    68                                                    else if ((state == DATA_PHASE) & (read_op & read_ack)) begin 
    69                                                      if (sign_ex) begin
    70              1                    ***0***              if (size == 4) result_reg <= read_data;
    71              1                       2616              if (size == 2) result_reg <= signed_short'((read_data >> (8 * offset)) & 32'h0000FFFF);
    72              1                       2654              if (size == 1) result_reg <= signed_byte'((read_data >> (8 * offset)) & 32'h000000FF);
    73                                                      end else begin
    74              1                       2639              if (size == 4) result_reg <= read_data;
    75              1                       2565              if (size == 2) result_reg <= unsigned_short'((read_data >> (8 * offset)) & 32'h0000FFFF);
    76              1                       2649              if (size == 1) result_reg <= unsigned_byte'((read_data >> (8 * offset)) & 32'h000000FF);
    77                                                      end
    78                                                    end
    79                                                  end
    80                                               
    81                                                  // assign result_valid = ((read_op & read_ack) || (write_op & write_ack)) & (state == DONE);
    82              1                     326247        assign result_valid = (read_op & read_ack) & (state == DATA_PHASE);
    83              1                     326246        assign read_enable = (read_op & (state == ADDR_PHASE));
    84              1                     315702        assign write_enable = (write_op & (state == ADDR_PHASE));
    85              1                      57275        assign write_byte_enable = (!write_op) ? '0 :
    86                                                                             (size == 4) ? 4'hF :
    87                                                                             (size == 2) ? 4'h3 << offset :
    88                                                                             (size == 1) ? 4'h1 << offset : '0;
    89                                               
    90                                               
    91              1                      60159        assign write_data = (!write_op) ? '0 :
    92                                                                      (size == 4) ? wdata :
    93                                                                      (size == 2) ? (wdata & 32'h0000FFFF) << (offset * 8) :
    94                                                                      (size == 1) ? (wdata & 32'h000000FF) << (offset * 8) : '0;
    95                                               
    96              1                     693664        always_comb begin
    97                                                    if (rst) begin 
    98              1                          4            size = '0;
    99              1                          4            offset = '0;
    100             1                          4            address = '0;
    101             1                          4            read_op = 0;
    102             1                          4            write_op = 0;
    103             1                          4            wdata = '0;
    104                                                   end else begin
    105                                                     if (state == DONE) begin
    106             1                     102944              size = '0;
    107             1                     102944              offset = '0;
    108             1                     102944              address = '0;
    109             1                     102944              read_op = 0;
    110             1                     102944              write_op = 0;
    111             1                     102944              wdata = '0;
    112                                                     end
    113                                                     if (enable & is_memory_op(instr)) begin
    114                                                     // $display("executing %s ", decode_instr(instr));
    115             1                      41947              address = (op1 + op2) >> 2;
    116             1                      41947              offset  = (op1 + op2) & 32'h00000003;
    117                                              `ifndef SYNTHESIS
    118             1                      41947              wdata = induce_errors(op3);
    119                                              `else
    120                                                       wdata = op3;
    121                                              `endif
    122                                                       casez (instr) 
    123             1                       5277                M_LW   : begin  size = 4;  read_op  = 1; sign_ex = 0; end
    123             2                       5277     
    123             3                       5277     
    124             1                       5232                M_LH   : begin  size = 2;  read_op  = 1; sign_ex = 1; end
    124             2                       5232     
    124             3                       5232     
    125             1                       5130                M_LHU  : begin  size = 2;  read_op  = 1; sign_ex = 0; end
    125             2                       5130     
    125             3                       5130     
    126             1                       5308                M_LB   : begin  size = 1;  read_op  = 1; sign_ex = 1; end
    126             2                       5308     
    126             3                       5308     
    127             1                       5298                M_LBU  : begin  size = 1;  read_op  = 1; sign_ex = 0; end
    127             2                       5298     
    127             3                       5298     
    128             1                       5218                M_SW   : begin  size = 4;  write_op = 1; sign_ex = 0; end
    128             2                       5218     
    128             3                       5218     
    129             1                       5116                M_SH   : begin  size = 2;  write_op = 1; sign_ex = 0; end
    129             2                       5116     
    129             3                       5116     
    130             1                       5368                M_SB   : begin  size = 1;  write_op = 1; sign_ex = 0; end
    130             2                       5368     
    130             3                       5368     
    131                                                       endcase
    132                                                     end
    133                                                   end
    134                                                 end
    135                                              
    136                                                 mnemonic_t opcode;
    137             1                     100001        assign opcode = opc_base(instr);
    138                                              
    139                                                 covergroup mcu_cg @(posedge clk); 
    140                                                   coverpoint opcode {
    141                                                      bins instr[] = {LW, LH, LHU, LB, LBU, SW, SH, SB};
    142                                                      // ignore_bins: others;
    143                                                    }
    144                                                    coverpoint result_reg {
    145                                                      bins positive = { [1:$] };
    146                                                      bins zero     = { 0 };
    147                                                      bins negative = { [$:-1] };
    148                                                    }
    149                                                    cross opcode, result_reg;
    150                                                 endgroup  
    151                                              
    152                                                 covergroup mcu_halfword_cg @(posedge clk);
    153                                                   coverpoint opcode {
    154                                                      bins instr[] = {LH, LHU};
    155                                                      //ignore_bins: others;
    156                                                    }
    157                                                    coverpoint result_reg {
    158                                                      bins positive = { [1:$] };
    159                                                      bins zero     = { 0 };
    160                                                      bins negative = { [$:-1] };
    161                                                    }
    162                                                    coverpoint offset {
    163                                                      bins offset[2] = {0, 2};
    164                                                      ignore_bins misaligned = {1, 3};
    165                                                    }
    166                                                    cross opcode, result_reg, offset;
    167                                                 endgroup  
    168                                              
    169                                                 covergroup mcu_byte_cg @(posedge clk);
    170                                                   coverpoint opcode {
    171                                                      bins instr[] = {LB, LBU};
    172                                                      //ignore_bins: others;
    173                                                    }
    174                                                    coverpoint result_reg {
    175                                                      bins positive = { [1:$] };
    176                                                      bins zero     = { 0 };
    177                                                      bins negative = { [$:-1] };
    178                                                    }
    179                                                    coverpoint offset {
    180                                                      bins offset[2] = {[0:3]};
    181                                                    }
    182                                                    cross opcode, result_reg, offset;
    183                                                 endgroup  
    184                                              
    185             1                          1        mcu_cg          mcu_cg_inst           = new();
    186             1                          1        mcu_halfword_cg mcu_halfword_cg_inst  = new();
    187             1                          1        mcu_byte_cg     mcu_byte_cg_inst      = new();
    188                                              
    189                                              endmodule

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        727       711        16    97.79%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/memory_ctrl.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          7                                    rst           1           1                              100.00 
          7                                    clk           1           1                              100.00 
          9                          instr.j.rd[4]           1           1                              100.00 
          9                          instr.j.rd[3]           1           1                              100.00 
          9                          instr.j.rd[2]           1           1                              100.00 
          9                          instr.j.rd[1]           1           1                              100.00 
          9                          instr.j.rd[0]           1           1                              100.00 
          9                     instr.j.opcode1[6]           1           1                              100.00 
          9                     instr.j.opcode1[5]           1           1                              100.00 
          9                     instr.j.opcode1[4]           1           1                              100.00 
          9                     instr.j.opcode1[3]           1           1                              100.00 
          9                     instr.j.opcode1[2]           1           1                              100.00 
          9                     instr.j.opcode1[1]           0           0                                0.00 
          9                     instr.j.opcode1[0]           0           0                                0.00 
          9                           instr.j.imm3           1           1                              100.00 
          9                        instr.j.imm2[7]           1           1                              100.00 
          9                        instr.j.imm2[6]           1           1                              100.00 
          9                        instr.j.imm2[5]           1           1                              100.00 
          9                        instr.j.imm2[4]           1           1                              100.00 
          9                        instr.j.imm2[3]           1           1                              100.00 
          9                        instr.j.imm2[2]           1           1                              100.00 
          9                        instr.j.imm2[1]           1           1                              100.00 
          9                        instr.j.imm2[0]           1           1                              100.00 
          9                           instr.j.imm1           1           1                              100.00 
          9                        instr.j.imm0[9]           1           1                              100.00 
          9                        instr.j.imm0[8]           1           1                              100.00 
          9                        instr.j.imm0[7]           1           1                              100.00 
          9                        instr.j.imm0[6]           1           1                              100.00 
          9                        instr.j.imm0[5]           1           1                              100.00 
          9                        instr.j.imm0[4]           1           1                              100.00 
          9                        instr.j.imm0[3]           1           1                              100.00 
          9                        instr.j.imm0[2]           1           1                              100.00 
          9                        instr.j.imm0[1]           1           1                              100.00 
          9                        instr.j.imm0[0]           1           1                              100.00 
         10                                 op3[9]           1           1                              100.00 
         10                                 op3[8]           1           1                              100.00 
         10                                 op3[7]           1           1                              100.00 
         10                                 op3[6]           1           1                              100.00 
         10                                 op3[5]           1           1                              100.00 
         10                                 op3[4]           1           1                              100.00 
         10                                 op3[3]           1           1                              100.00 
         10                                op3[31]           1           1                              100.00 
         10                                op3[30]           1           1                              100.00 
         10                                 op3[2]           1           1                              100.00 
         10                                op3[29]           1           1                              100.00 
         10                                op3[28]           1           1                              100.00 
         10                                op3[27]           1           1                              100.00 
         10                                op3[26]           1           1                              100.00 
         10                                op3[25]           1           1                              100.00 
         10                                op3[24]           1           1                              100.00 
         10                                op3[23]           1           1                              100.00 
         10                                op3[22]           1           1                              100.00 
         10                                op3[21]           1           1                              100.00 
         10                                op3[20]           1           1                              100.00 
         10                                 op3[1]           1           1                              100.00 
         10                                op3[19]           1           1                              100.00 
         10                                op3[18]           1           1                              100.00 
         10                                op3[17]           1           1                              100.00 
         10                                op3[16]           1           1                              100.00 
         10                                op3[15]           1           1                              100.00 
         10                                op3[14]           1           1                              100.00 
         10                                op3[13]           1           1                              100.00 
         10                                op3[12]           1           1                              100.00 
         10                                op3[11]           1           1                              100.00 
         10                                op3[10]           1           1                              100.00 
         10                                 op3[0]           1           1                              100.00 
         10                                 op2[9]           1           1                              100.00 
         10                                 op2[8]           1           1                              100.00 
         10                                 op2[7]           1           1                              100.00 
         10                                 op2[6]           1           1                              100.00 
         10                                 op2[5]           1           1                              100.00 
         10                                 op2[4]           1           1                              100.00 
         10                                 op2[3]           1           1                              100.00 
         10                                op2[31]           1           1                              100.00 
         10                                op2[30]           1           1                              100.00 
         10                                 op2[2]           1           1                              100.00 
         10                                op2[29]           1           1                              100.00 
         10                                op2[28]           1           1                              100.00 
         10                                op2[27]           1           1                              100.00 
         10                                op2[26]           1           1                              100.00 
         10                                op2[25]           1           1                              100.00 
         10                                op2[24]           1           1                              100.00 
         10                                op2[23]           1           1                              100.00 
         10                                op2[22]           1           1                              100.00 
         10                                op2[21]           1           1                              100.00 
         10                                op2[20]           1           1                              100.00 
         10                                 op2[1]           1           1                              100.00 
         10                                op2[19]           1           1                              100.00 
         10                                op2[18]           1           1                              100.00 
         10                                op2[17]           1           1                              100.00 
         10                                op2[16]           1           1                              100.00 
         10                                op2[15]           1           1                              100.00 
         10                                op2[14]           1           1                              100.00 
         10                                op2[13]           1           1                              100.00 
         10                                op2[12]           1           1                              100.00 
         10                                op2[11]           1           1                              100.00 
         10                                op2[10]           1           1                              100.00 
         10                                 op2[0]           1           1                              100.00 
         10                                 op1[9]           1           1                              100.00 
         10                                 op1[8]           1           1                              100.00 
         10                                 op1[7]           1           1                              100.00 
         10                                 op1[6]           1           1                              100.00 
         10                                 op1[5]           1           1                              100.00 
         10                                 op1[4]           1           1                              100.00 
         10                                 op1[3]           1           1                              100.00 
         10                                op1[31]           1           1                              100.00 
         10                                op1[30]           1           1                              100.00 
         10                                 op1[2]           1           1                              100.00 
         10                                op1[29]           1           1                              100.00 
         10                                op1[28]           1           1                              100.00 
         10                                op1[27]           1           1                              100.00 
         10                                op1[26]           1           1                              100.00 
         10                                op1[25]           1           1                              100.00 
         10                                op1[24]           1           1                              100.00 
         10                                op1[23]           1           1                              100.00 
         10                                op1[22]           1           1                              100.00 
         10                                op1[21]           1           1                              100.00 
         10                                op1[20]           1           1                              100.00 
         10                                 op1[1]           1           1                              100.00 
         10                                op1[19]           1           1                              100.00 
         10                                op1[18]           1           1                              100.00 
         10                                op1[17]           1           1                              100.00 
         10                                op1[16]           1           1                              100.00 
         10                                op1[15]           1           1                              100.00 
         10                                op1[14]           1           1                              100.00 
         10                                op1[13]           1           1                              100.00 
         10                                op1[12]           1           1                              100.00 
         10                                op1[11]           1           1                              100.00 
         10                                op1[10]           1           1                              100.00 
         10                                 op1[0]           1           1                              100.00 
         11                                 enable           1           1                              100.00 
         12                              result[9]           1           1                              100.00 
         12                              result[8]           1           1                              100.00 
         12                              result[7]           1           1                              100.00 
         12                              result[6]           1           1                              100.00 
         12                              result[5]           1           1                              100.00 
         12                              result[4]           1           1                              100.00 
         12                              result[3]           1           1                              100.00 
         12                             result[31]           1           1                              100.00 
         12                             result[30]           1           1                              100.00 
         12                              result[2]           1           1                              100.00 
         12                             result[29]           1           1                              100.00 
         12                             result[28]           1           1                              100.00 
         12                             result[27]           1           1                              100.00 
         12                             result[26]           1           1                              100.00 
         12                             result[25]           1           1                              100.00 
         12                             result[24]           1           1                              100.00 
         12                             result[23]           1           1                              100.00 
         12                             result[22]           1           1                              100.00 
         12                             result[21]           1           1                              100.00 
         12                             result[20]           1           1                              100.00 
         12                              result[1]           1           1                              100.00 
         12                             result[19]           1           1                              100.00 
         12                             result[18]           1           1                              100.00 
         12                             result[17]           1           1                              100.00 
         12                             result[16]           1           1                              100.00 
         12                             result[15]           1           1                              100.00 
         12                             result[14]           1           1                              100.00 
         12                             result[13]           1           1                              100.00 
         12                             result[12]           1           1                              100.00 
         12                             result[11]           1           1                              100.00 
         12                             result[10]           1           1                              100.00 
         12                              result[0]           1           1                              100.00 
         13                           result_valid           1           1                              100.00 
         15                             address[9]           1           1                              100.00 
         15                             address[8]           1           1                              100.00 
         15                             address[7]           1           1                              100.00 
         15                             address[6]           1           1                              100.00 
         15                             address[5]           1           1                              100.00 
         15                             address[4]           1           1                              100.00 
         15                             address[3]           1           1                              100.00 
         15                            address[31]           0           0                                0.00 
         15                            address[30]           0           0                                0.00 
         15                             address[2]           1           1                              100.00 
         15                            address[29]           1           1                              100.00 
         15                            address[28]           1           1                              100.00 
         15                            address[27]           1           1                              100.00 
         15                            address[26]           1           1                              100.00 
         15                            address[25]           1           1                              100.00 
         15                            address[24]           1           1                              100.00 
         15                            address[23]           1           1                              100.00 
         15                            address[22]           1           1                              100.00 
         15                            address[21]           1           1                              100.00 
         15                            address[20]           1           1                              100.00 
         15                             address[1]           1           1                              100.00 
         15                            address[19]           1           1                              100.00 
         15                            address[18]           1           1                              100.00 
         15                            address[17]           1           1                              100.00 
         15                            address[16]           1           1                              100.00 
         15                            address[15]           1           1                              100.00 
         15                            address[14]           1           1                              100.00 
         15                            address[13]           1           1                              100.00 
         15                            address[12]           1           1                              100.00 
         15                            address[11]           1           1                              100.00 
         15                            address[10]           1           1                              100.00 
         15                             address[0]           1           1                              100.00 
         16                            read_enable           1           1                              100.00 
         17                           read_data[9]           1           1                              100.00 
         17                           read_data[8]           1           1                              100.00 
         17                           read_data[7]           1           1                              100.00 
         17                           read_data[6]           1           1                              100.00 
         17                           read_data[5]           1           1                              100.00 
         17                           read_data[4]           1           1                              100.00 
         17                           read_data[3]           1           1                              100.00 
         17                          read_data[31]           1           1                              100.00 
         17                          read_data[30]           1           1                              100.00 
         17                           read_data[2]           1           1                              100.00 
         17                          read_data[29]           1           1                              100.00 
         17                          read_data[28]           1           1                              100.00 
         17                          read_data[27]           1           1                              100.00 
         17                          read_data[26]           1           1                              100.00 
         17                          read_data[25]           1           1                              100.00 
         17                          read_data[24]           1           1                              100.00 
         17                          read_data[23]           1           1                              100.00 
         17                          read_data[22]           1           1                              100.00 
         17                          read_data[21]           1           1                              100.00 
         17                          read_data[20]           1           1                              100.00 
         17                           read_data[1]           1           1                              100.00 
         17                          read_data[19]           1           1                              100.00 
         17                          read_data[18]           1           1                              100.00 
         17                          read_data[17]           1           1                              100.00 
         17                          read_data[16]           1           1                              100.00 
         17                          read_data[15]           1           1                              100.00 
         17                          read_data[14]           1           1                              100.00 
         17                          read_data[13]           1           1                              100.00 
         17                          read_data[12]           1           1                              100.00 
         17                          read_data[11]           1           1                              100.00 
         17                          read_data[10]           1           1                              100.00 
         17                           read_data[0]           1           1                              100.00 
         18                               read_ack           0           0                                0.00 
         19                           write_enable           1           1                              100.00 
         20                   write_byte_enable[3]           1           1                              100.00 
         20                   write_byte_enable[2]           1           1                              100.00 
         20                   write_byte_enable[1]           1           1                              100.00 
         20                   write_byte_enable[0]           1           1                              100.00 
         21                          write_data[9]           1           1                              100.00 
         21                          write_data[8]           1           1                              100.00 
         21                          write_data[7]           1           1                              100.00 
         21                          write_data[6]           1           1                              100.00 
         21                          write_data[5]           1           1                              100.00 
         21                          write_data[4]           1           1                              100.00 
         21                          write_data[3]           1           1                              100.00 
         21                         write_data[31]           1           1                              100.00 
         21                         write_data[30]           1           1                              100.00 
         21                          write_data[2]           1           1                              100.00 
         21                         write_data[29]           1           1                              100.00 
         21                         write_data[28]           1           1                              100.00 
         21                         write_data[27]           1           1                              100.00 
         21                         write_data[26]           1           1                              100.00 
         21                         write_data[25]           1           1                              100.00 
         21                         write_data[24]           1           1                              100.00 
         21                         write_data[23]           1           1                              100.00 
         21                         write_data[22]           1           1                              100.00 
         21                         write_data[21]           1           1                              100.00 
         21                         write_data[20]           1           1                              100.00 
         21                          write_data[1]           1           1                              100.00 
         21                         write_data[19]           1           1                              100.00 
         21                         write_data[18]           1           1                              100.00 
         21                         write_data[17]           1           1                              100.00 
         21                         write_data[16]           1           1                              100.00 
         21                         write_data[15]           1           1                              100.00 
         21                         write_data[14]           1           1                              100.00 
         21                         write_data[13]           1           1                              100.00 
         21                         write_data[12]           1           1                              100.00 
         21                         write_data[11]           1           1                              100.00 
         21                         write_data[10]           1           1                              100.00 
         21                          write_data[0]           1           1                              100.00 
         22                              write_ack           0           0                                0.00 
         31                                  state               ENUM type       Value       Count 
                                                                ADDR_PHASE           1      100.00 
                                                                DATA_PHASE           1      100.00 
                                                                      DONE           1      100.00 
         31                             next_state               ENUM type       Value       Count 
                                                                ADDR_PHASE           1      100.00 
                                                                DATA_PHASE           1      100.00 
                                                                      DONE           1      100.00 
         32                               write_op           1           1                              100.00 
         32                                read_op           1           1                              100.00 
         33                            write_instr           0           0                                0.00 
         33                             read_instr           0           0                                0.00 
         34                                sign_ex           1           1                              100.00 
         35                              offset[1]           1           1                              100.00 
         35                              offset[0]           1           1                              100.00 
         36                                size[2]           1           1                              100.00 
         36                                size[1]           1           1                              100.00 
         36                                size[0]           1           1                              100.00 
         37                               wdata[9]           1           1                              100.00 
         37                               wdata[8]           1           1                              100.00 
         37                               wdata[7]           1           1                              100.00 
         37                               wdata[6]           1           1                              100.00 
         37                               wdata[5]           1           1                              100.00 
         37                               wdata[4]           1           1                              100.00 
         37                               wdata[3]           1           1                              100.00 
         37                              wdata[31]           1           1                              100.00 
         37                              wdata[30]           1           1                              100.00 
         37                               wdata[2]           1           1                              100.00 
         37                              wdata[29]           1           1                              100.00 
         37                              wdata[28]           1           1                              100.00 
         37                              wdata[27]           1           1                              100.00 
         37                              wdata[26]           1           1                              100.00 
         37                              wdata[25]           1           1                              100.00 
         37                              wdata[24]           1           1                              100.00 
         37                              wdata[23]           1           1                              100.00 
         37                              wdata[22]           1           1                              100.00 
         37                              wdata[21]           1           1                              100.00 
         37                              wdata[20]           1           1                              100.00 
         37                               wdata[1]           1           1                              100.00 
         37                              wdata[19]           1           1                              100.00 
         37                              wdata[18]           1           1                              100.00 
         37                              wdata[17]           1           1                              100.00 
         37                              wdata[16]           1           1                              100.00 
         37                              wdata[15]           1           1                              100.00 
         37                              wdata[14]           1           1                              100.00 
         37                              wdata[13]           1           1                              100.00 
         37                              wdata[12]           1           1                              100.00 
         37                              wdata[11]           1           1                              100.00 
         37                              wdata[10]           1           1                              100.00 
         37                               wdata[0]           1           1                              100.00 
         38                          result_reg[9]           1           1                              100.00 
         38                          result_reg[8]           1           1                              100.00 
         38                          result_reg[7]           1           1                              100.00 
         38                          result_reg[6]           1           1                              100.00 
         38                          result_reg[5]           1           1                              100.00 
         38                          result_reg[4]           1           1                              100.00 
         38                          result_reg[3]           1           1                              100.00 
         38                         result_reg[31]           1           1                              100.00 
         38                         result_reg[30]           1           1                              100.00 
         38                          result_reg[2]           1           1                              100.00 
         38                         result_reg[29]           1           1                              100.00 
         38                         result_reg[28]           1           1                              100.00 
         38                         result_reg[27]           1           1                              100.00 
         38                         result_reg[26]           1           1                              100.00 
         38                         result_reg[25]           1           1                              100.00 
         38                         result_reg[24]           1           1                              100.00 
         38                         result_reg[23]           1           1                              100.00 
         38                         result_reg[22]           1           1                              100.00 
         38                         result_reg[21]           1           1                              100.00 
         38                         result_reg[20]           1           1                              100.00 
         38                          result_reg[1]           1           1                              100.00 
         38                         result_reg[19]           1           1                              100.00 
         38                         result_reg[18]           1           1                              100.00 
         38                         result_reg[17]           1           1                              100.00 
         38                         result_reg[16]           1           1                              100.00 
         38                         result_reg[15]           1           1                              100.00 
         38                         result_reg[14]           1           1                              100.00 
         38                         result_reg[13]           1           1                              100.00 
         38                         result_reg[12]           1           1                              100.00 
         38                         result_reg[11]           1           1                              100.00 
         38                         result_reg[10]           1           1                              100.00 
         38                          result_reg[0]           1           1                              100.00 
        136                                 opcode               ENUM type       Value       Count 
                                                                      ADDI           4      100.00 
                                                                      STLI           5      100.00 
                                                                     STLUI           6      100.00 
                                                                      ANDI           1      100.00 
                                                                       ORI          10      100.00 
                                                                      XORI           7      100.00 
                                                                      SLLI           6      100.00 
                                                                      SRLI           6      100.00 
                                                                      SRAI           7      100.00 
                                                                       LUI           4      100.00 
                                                                     AUIPC           2      100.00 
                                                                       ADD           9      100.00 
                                                                       SUB           7      100.00 
                                                                       STL           7      100.00 
                                                                      STLU           8      100.00 
                                                                       AND           6      100.00 
                                                                        OR          10      100.00 
                                                                       XOR           7      100.00 
                                                                       SLL           4      100.00 
                                                                       SRL           4      100.00 
                                                                       SRA           5      100.00 
                                                                       JAL           7      100.00 
                                                                      JALR           9      100.00 
                                                                       BEQ           4      100.00 
                                                                       BNE           7      100.00 
                                                                       BLT           6      100.00 
                                                                      BLTU           6      100.00 
                                                                       BGE           6      100.00 
                                                                      BGEU           5      100.00 
                                                                        LW           5      100.00 
                                                                        LH           3      100.00 
                                                                        LB           6      100.00 
                                                                       LHU           6      100.00 
                                                                       LBU           4      100.00 
                                                                        SW           2      100.00 
                                                                        SH           7      100.00 
                                                                        SB           4      100.00 

Total Node Count     =        385 
Toggled Node Count   =        377 
Untoggled Node Count =          8 

Toggle Coverage      =      97.79% (711 of 727 bins)

=================================================================================
=== File: ../design_rtl/riscv_rv32i.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32        28         4    87.50%

================================Branch Details================================

Branch Coverage for file ../design_rtl/riscv_rv32i.sv --

------------------------------------IF Branch------------------------------------
    45                                    299999     Count coming in to IF
    45              1                    ***0***        assign halted = (execute & (instr == EBREAK)) ? 1 : 0;
    45              2                     299999        assign halted = (execute & (instr == EBREAK)) ? 1 : 0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                    400000     Count coming in to IF
    48              1                          2          if (rst) state <= FETCH;
    49              1                     399998          else     state <= next_state;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    53                                    500000     Count coming in to CASE
    54              1                     100001            FETCH:    next_state = DECODE;
    55              1                     199998            DECODE:   next_state = EXECUTE;
    56              1                      99999            EXECUTE:  if (instr == EBREAK) next_state = HALT;
    58              1                      99999            WRITE_BACK: if (data_read_rdy) next_state = FETCH;
    59              1                    ***0***            HALT:     next_state = HALT;
                                               3     All False Count
Branch totals: 5 hits of 6 branches = 83.33%

------------------------------------IF Branch------------------------------------
    56                                     99999     Count coming in to IF
    56              2                    ***0***            EXECUTE:  if (instr == EBREAK) next_state = HALT;
    57              1                      99999                      else                 next_state = WRITE_BACK;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    58                                     99999     Count coming in to IF
    58              2                      99999            WRITE_BACK: if (data_read_rdy) next_state = FETCH;
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                    399998     Count coming in to IF
    63              1                     100000        assign fetch      = (state == FETCH)      ? 1 : 0;
    63              2                     299998        assign fetch      = (state == FETCH)      ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    64                                    399998     Count coming in to IF
    64              1                     100000        assign decode     = (state == DECODE)     ? 1 : 0;
    64              2                     299998        assign decode     = (state == DECODE)     ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                    399998     Count coming in to IF
    65              1                      99999        assign execute    = (state == EXECUTE)    ? 1 : 0;
    65              2                     299999        assign execute    = (state == EXECUTE)    ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                    399998     Count coming in to IF
    66              1                      99999        assign write_back = (state == WRITE_BACK) ? 1 : 0;
    66              2                     299999        assign write_back = (state == WRITE_BACK) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    130                                   392502     Count coming in to IF
    130             1                          4          if (rst) begin
    134             1                     392498          end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    135                                   392498     Count coming in to IF
    135             1                      76413            if (write_back & (rd != 0)) begin
                                          316085     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    141                                   169216     Count coming in to IF
    141             1                     114029        assign result = is_alu_op(instr)    ? alu_result :
    142             1                      55187                        is_memory_op(instr) ? mcu_result :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    142                                    55187     Count coming in to IF
    142             2                      34090                        is_memory_op(instr) ? mcu_result :
    143             1                      21097                        is_branch_op(instr) ? bcu_result : '0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    143                                    21097     Count coming in to IF
    143             2                      21095                        is_branch_op(instr) ? bcu_result : '0;
    143             3                          2                        is_branch_op(instr) ? bcu_result : '0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         6         3    66.66%

================================Condition Details================================

Condition Coverage for file ../design_rtl/riscv_rv32i.sv --

----------------Focused Condition View-------------------
Line       45 Item    1  (execute & (instr == EBREAK))
Condition totals: 0 of 2 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
            execute         N  No hits                  Hit '_0' and '_1'
  (instr == EBREAK)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  execute_0             (instr == EBREAK)             
  Row   2:    ***0***  execute_1             (instr == EBREAK)             
  Row   3:          1  (instr == EBREAK)_0   execute                       
  Row   4:    ***0***  (instr == EBREAK)_1   execute                       

----------------Focused Condition View-------------------
Line       56 Item    1  (instr == EBREAK)
Condition totals: 0 of 1 input term covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (instr == EBREAK)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (instr == EBREAK)_0   -                             
  Row   2:    ***0***  (instr == EBREAK)_1   -                             

----------------Focused Condition View-------------------
Line       63 Item    1  (state == FETCH)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (state == FETCH)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state == FETCH)_0    -                             
  Row   2:          1  (state == FETCH)_1    -                             

----------------Focused Condition View-------------------
Line       64 Item    1  (state == DECODE)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (state == DECODE)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state == DECODE)_0   -                             
  Row   2:          1  (state == DECODE)_1   -                             

----------------Focused Condition View-------------------
Line       65 Item    1  (state == EXECUTE)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (state == EXECUTE)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state == EXECUTE)_0  -                             
  Row   2:          1  (state == EXECUTE)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    1  (state == WRITE_BACK)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (state == WRITE_BACK)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (state == WRITE_BACK)_0  -                             
  Row   2:          1  (state == WRITE_BACK)_1  -                             

----------------Focused Condition View-------------------
Line       135 Item    1  (write_back & (rd != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  write_back         Y
   (rd != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  write_back_0          (rd != 0)                     
  Row   2:          1  write_back_1          (rd != 0)                     
  Row   3:          1  (rd != 0)_0           write_back                    
  Row   4:          1  (rd != 0)_1           write_back                    


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         4         1    80.00%
    FSM Transitions                  8         4         4    50.00%

================================FSM Details================================

FSM Coverage for file ../design_rtl/riscv_rv32i.sv --

FSM_ID: state
    Current State Object : state
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  54               FETCH                   0
  55              DECODE                   1
  56             EXECUTE                   2
  58          WRITE_BACK                   3
  48                HALT                   4
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                   FETCH              100001          
                  DECODE              100000          
                 EXECUTE               99999          
              WRITE_BACK               99999          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  54                   0              100000          FETCH -> DECODE               
  55                   1               99999          DECODE -> EXECUTE             
  57                   3               99999          EXECUTE -> WRITE_BACK          
  58                   6               99999          WRITE_BACK -> FETCH           
    Uncovered States :
    ------------------
                   State
                   -----
                    HALT
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  48                   2          DECODE -> FETCH     
  56                   4          EXECUTE -> HALT     
  48                   5          EXECUTE -> FETCH    
  48                   7          HALT -> FETCH       


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         4         1    80.00%
        FSM Transitions              8         4         4    50.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        19         2    90.47%

================================Statement Details================================

Statement Coverage for file ../design_rtl/riscv_rv32i.sv --

    1                                                import opcodes::*;
    2                                                
    3                                                module riscv_rv32i #(
    4                                                     parameter BROKEN=0
    5                                                  )(
    6                                                   input  logic         clk, rst,
    7                                                
    8                                                   // instruction memory interface
    9                                                
    10                                                  output logic [31:0]  instruction_address,
    11                                                  output logic         instruction_enable,
    12                                                  input  var instruction_t instr,
    13                                               
    14                                                  // data memory interface
    15                                               
    16                                                  output logic [31:0]  data_address,
    17                                                  output logic         data_read_enable,
    18                                                  input  logic [31:0]  data_read_data,
    19                                                  input  logic         data_read_rdy,
    20                                                  output logic         data_write_enable,
    21                                                  output logic [3:0]   data_write_byte_enable,
    22                                                  output logic [31:0]  data_write_data,
    23                                                  input  logic         data_write_rdy,
    24                                                  
    25                                                  // halt signal -- asserted on execution of EBREAK 
    26                                               
    27                                                  output logic         halted);
    28                                               
    29                                                  logic fetch, decode, execute, write_back;
    30                                                  logic executed;
    31                                               
    32                                                  typedef enum logic [2:0] {FETCH, DECODE, EXECUTE, WRITE_BACK, HALT} stage_t;
    33                                               
    34                                                  stage_t state, next_state;
    35                                               
    36                                                  register_t register_bank[32];
    37                                                  register_t pc, op1, op2, op3;
    38                                                  register_t alu_result, mcu_result, bcu_result, result;
    39                                                  register_num_t rd;
    40                                               
    41                                                  logic [5:0] i;
    42                                               
    43                                                  assign instruction_address = pc;
    44                                                  assign instruction_enable = fetch;
    45              1                     300000        assign halted = (execute & (instr == EBREAK)) ? 1 : 0;
    46                                               
    47              1                     400000        always_ff @(posedge clk) begin
    48              1                          2          if (rst) state <= FETCH;
    49              1                     399998          else     state <= next_state;
    50                                                  end
    51                                               
    52              1                     500000        always_comb begin
    53                                                    case (state) 
    54              1                     100001            FETCH:    next_state = DECODE;
    55              1                     199998            DECODE:   next_state = EXECUTE;
    56              1                    ***0***            EXECUTE:  if (instr == EBREAK) next_state = HALT;
    57              1                      99999                      else                 next_state = WRITE_BACK;
    58              1                      99999            WRITE_BACK: if (data_read_rdy) next_state = FETCH;
    59              1                    ***0***            HALT:     next_state = HALT;
    60                                                    endcase
    61                                                  end
    62                                               
    63              1                     399999        assign fetch      = (state == FETCH)      ? 1 : 0;
    64              1                     399999        assign decode     = (state == DECODE)     ? 1 : 0;
    65              1                     399999        assign execute    = (state == EXECUTE)    ? 1 : 0;
    66              1                     399999        assign write_back = (state == WRITE_BACK) ? 1 : 0;
    67                                               
    68                                                  decoder #(.random_errors(BROKEN)) u_decoder(
    69                                                    .clk           (clk),
    70                                                    .rst           (rst),
    71                                                 
    72                                                    .enable        (decode),
    73                                                    .instr         (instr),
    74                                                    .register_bank (register_bank),
    75                                                    .op1           (op1),
    76                                                    .op2           (op2),
    77                                                    .op3           (op3),
    78                                                    .rd            (rd)
    79                                                  );
    80                                               
    81                                                  alu u_alu(
    82                                                    .clk            (clk),
    83                                                    .rst            (rst),
    84                                                
    85                                                    .instr          (instr),
    86                                                    .op1            (op1),
    87                                                    .op2            (op2),
    88                                                    .enable         (execute),
    89                                                    .instr_exec     (executed),
    90                                                    .result         (alu_result)
    91                                                  );
    92                                               
    93                                                  branch_unit u_branch_unit(
    94                                                    .clk            (clk),
    95                                                    .rst            (rst),
    96                                               
    97                                                    .instr          (instr),
    98                                                    .op1            (op1),
    99                                                    .op2            (op2),
    100                                                   .op3            (op3),
    101                                                   .enable         (execute),
    102                                                   .pc_out         (pc),
    103                                              
    104                                                   .ret_addr       (bcu_result)
    105                                                 );
    106                                                 
    107                                                 memory_ctrl u_memory_ctrl(
    108                                                   .clk            (clk),
    109                                                   .rst            (rst),
    110                                              
    111                                                   .instr          (instr),
    112                                                   .op1            (op1),
    113                                                   .op2            (op2),
    114                                                   .op3            (op3),
    115                                                   .enable         (execute),
    116                                                   .result         (mcu_result),
    117                                                   .result_valid   (),
    118                                              
    119                                                   .address        (data_address),
    120                                                   .read_enable    (data_read_enable),
    121                                                   .read_data      (data_read_data),
    122                                                   .read_ack       (data_read_rdy),
    123                                                   .write_enable   (data_write_enable),
    124                                                   .write_byte_enable (data_write_byte_enable),
    125                                                   .write_data     (data_write_data),
    126                                                   .write_ack      (data_write_rdy)
    127                                                 );
    128                                              
    129             1                     392502        always @(posedge clk) begin
    130                                                   if (rst) begin
    131             1                          4            for (i=0; i<32; i++) begin
    131             2                        128     
    132             1                        128              register_bank[i] <= '0;
    133                                                     end
    134                                                   end else begin
    135                                                     if (write_back & (rd != 0)) begin
    136             1                      76413              register_bank[rd] <= result;
    137                                                     end
    138                                                   end
    139                                                 end
    140                                              
    141             1                     169216        assign result = is_alu_op(instr)    ? alu_result :
    142                                                                 is_memory_op(instr) ? mcu_result :
    143                                                                 is_branch_op(instr) ? bcu_result : '0;
    144                                              
    145                                              endmodule

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        898       678       220    75.50%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/riscv_rv32i.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          6                                    rst           1           1                              100.00 
          6                                    clk           1           1                              100.00 
         10                 instruction_address[9]           0           0                                0.00 
         10                 instruction_address[8]           0           0                                0.00 
         10                 instruction_address[7]           0           0                                0.00 
         10                 instruction_address[6]           0           0                                0.00 
         10                 instruction_address[5]           0           0                                0.00 
         10                 instruction_address[4]           0           0                                0.00 
         10                 instruction_address[3]           0           0                                0.00 
         10                instruction_address[31]           0           0                                0.00 
         10                instruction_address[30]           0           0                                0.00 
         10                 instruction_address[2]           0           0                                0.00 
         10                instruction_address[29]           0           0                                0.00 
         10                instruction_address[28]           0           0                                0.00 
         10                instruction_address[27]           0           0                                0.00 
         10                instruction_address[26]           0           0                                0.00 
         10                instruction_address[25]           0           0                                0.00 
         10                instruction_address[24]           0           0                                0.00 
         10                instruction_address[23]           0           0                                0.00 
         10                instruction_address[22]           0           0                                0.00 
         10                instruction_address[21]           0           0                                0.00 
         10                instruction_address[20]           0           0                                0.00 
         10                 instruction_address[1]           0           0                                0.00 
         10                instruction_address[19]           0           0                                0.00 
         10                instruction_address[18]           0           0                                0.00 
         10                instruction_address[17]           0           0                                0.00 
         10                instruction_address[16]           0           0                                0.00 
         10                instruction_address[15]           0           0                                0.00 
         10                instruction_address[14]           0           0                                0.00 
         10                instruction_address[13]           0           0                                0.00 
         10                instruction_address[12]           0           0                                0.00 
         10                instruction_address[11]           0           0                                0.00 
         10                instruction_address[10]           0           0                                0.00 
         10                 instruction_address[0]           0           0                                0.00 
         11                     instruction_enable           1           1                              100.00 
         12                               instr[9]           1           1                              100.00 
         12                               instr[8]           1           1                              100.00 
         12                               instr[7]           1           1                              100.00 
         12                               instr[6]           1           1                              100.00 
         12                               instr[5]           1           1                              100.00 
         12                               instr[4]           1           1                              100.00 
         12                               instr[3]           1           1                              100.00 
         12                              instr[31]           1           1                              100.00 
         12                              instr[30]           1           1                              100.00 
         12                               instr[2]           1           1                              100.00 
         12                              instr[29]           1           1                              100.00 
         12                              instr[28]           1           1                              100.00 
         12                              instr[27]           1           1                              100.00 
         12                              instr[26]           1           1                              100.00 
         12                              instr[25]           1           1                              100.00 
         12                              instr[24]           1           1                              100.00 
         12                              instr[23]           1           1                              100.00 
         12                              instr[22]           1           1                              100.00 
         12                              instr[21]           1           1                              100.00 
         12                              instr[20]           1           1                              100.00 
         12                               instr[1]           0           0                                0.00 
         12                              instr[19]           1           1                              100.00 
         12                              instr[18]           1           1                              100.00 
         12                              instr[17]           1           1                              100.00 
         12                              instr[16]           1           1                              100.00 
         12                              instr[15]           1           1                              100.00 
         12                              instr[14]           1           1                              100.00 
         12                              instr[13]           1           1                              100.00 
         12                              instr[12]           1           1                              100.00 
         12                              instr[11]           1           1                              100.00 
         12                              instr[10]           1           1                              100.00 
         12                               instr[0]           0           0                                0.00 
         16                        data_address[9]           1           1                              100.00 
         16                        data_address[8]           1           1                              100.00 
         16                        data_address[7]           1           1                              100.00 
         16                        data_address[6]           1           1                              100.00 
         16                        data_address[5]           1           1                              100.00 
         16                        data_address[4]           1           1                              100.00 
         16                        data_address[3]           1           1                              100.00 
         16                       data_address[31]           0           0                                0.00 
         16                       data_address[30]           0           0                                0.00 
         16                        data_address[2]           1           1                              100.00 
         16                       data_address[29]           1           1                              100.00 
         16                       data_address[28]           1           1                              100.00 
         16                       data_address[27]           1           1                              100.00 
         16                       data_address[26]           1           1                              100.00 
         16                       data_address[25]           1           1                              100.00 
         16                       data_address[24]           1           1                              100.00 
         16                       data_address[23]           1           1                              100.00 
         16                       data_address[22]           1           1                              100.00 
         16                       data_address[21]           1           1                              100.00 
         16                       data_address[20]           1           1                              100.00 
         16                        data_address[1]           1           1                              100.00 
         16                       data_address[19]           1           1                              100.00 
         16                       data_address[18]           1           1                              100.00 
         16                       data_address[17]           1           1                              100.00 
         16                       data_address[16]           1           1                              100.00 
         16                       data_address[15]           1           1                              100.00 
         16                       data_address[14]           1           1                              100.00 
         16                       data_address[13]           1           1                              100.00 
         16                       data_address[12]           1           1                              100.00 
         16                       data_address[11]           1           1                              100.00 
         16                       data_address[10]           1           1                              100.00 
         16                        data_address[0]           1           1                              100.00 
         17                       data_read_enable           1           1                              100.00 
         18                      data_read_data[9]           1           1                              100.00 
         18                      data_read_data[8]           1           1                              100.00 
         18                      data_read_data[7]           1           1                              100.00 
         18                      data_read_data[6]           1           1                              100.00 
         18                      data_read_data[5]           1           1                              100.00 
         18                      data_read_data[4]           1           1                              100.00 
         18                      data_read_data[3]           1           1                              100.00 
         18                     data_read_data[31]           1           1                              100.00 
         18                     data_read_data[30]           1           1                              100.00 
         18                      data_read_data[2]           1           1                              100.00 
         18                     data_read_data[29]           1           1                              100.00 
         18                     data_read_data[28]           1           1                              100.00 
         18                     data_read_data[27]           1           1                              100.00 
         18                     data_read_data[26]           1           1                              100.00 
         18                     data_read_data[25]           1           1                              100.00 
         18                     data_read_data[24]           1           1                              100.00 
         18                     data_read_data[23]           1           1                              100.00 
         18                     data_read_data[22]           1           1                              100.00 
         18                     data_read_data[21]           1           1                              100.00 
         18                     data_read_data[20]           1           1                              100.00 
         18                      data_read_data[1]           1           1                              100.00 
         18                     data_read_data[19]           1           1                              100.00 
         18                     data_read_data[18]           1           1                              100.00 
         18                     data_read_data[17]           1           1                              100.00 
         18                     data_read_data[16]           1           1                              100.00 
         18                     data_read_data[15]           1           1                              100.00 
         18                     data_read_data[14]           1           1                              100.00 
         18                     data_read_data[13]           1           1                              100.00 
         18                     data_read_data[12]           1           1                              100.00 
         18                     data_read_data[11]           1           1                              100.00 
         18                     data_read_data[10]           1           1                              100.00 
         18                      data_read_data[0]           1           1                              100.00 
         19                          data_read_rdy           0           0                                0.00 
         20                      data_write_enable           1           1                              100.00 
         21              data_write_byte_enable[3]           1           1                              100.00 
         21              data_write_byte_enable[2]           1           1                              100.00 
         21              data_write_byte_enable[1]           1           1                              100.00 
         21              data_write_byte_enable[0]           1           1                              100.00 
         22                     data_write_data[9]           1           1                              100.00 
         22                     data_write_data[8]           1           1                              100.00 
         22                     data_write_data[7]           1           1                              100.00 
         22                     data_write_data[6]           1           1                              100.00 
         22                     data_write_data[5]           1           1                              100.00 
         22                     data_write_data[4]           1           1                              100.00 
         22                     data_write_data[3]           1           1                              100.00 
         22                    data_write_data[31]           1           1                              100.00 
         22                    data_write_data[30]           1           1                              100.00 
         22                     data_write_data[2]           1           1                              100.00 
         22                    data_write_data[29]           1           1                              100.00 
         22                    data_write_data[28]           1           1                              100.00 
         22                    data_write_data[27]           1           1                              100.00 
         22                    data_write_data[26]           1           1                              100.00 
         22                    data_write_data[25]           1           1                              100.00 
         22                    data_write_data[24]           1           1                              100.00 
         22                    data_write_data[23]           1           1                              100.00 
         22                    data_write_data[22]           1           1                              100.00 
         22                    data_write_data[21]           1           1                              100.00 
         22                    data_write_data[20]           1           1                              100.00 
         22                     data_write_data[1]           1           1                              100.00 
         22                    data_write_data[19]           1           1                              100.00 
         22                    data_write_data[18]           1           1                              100.00 
         22                    data_write_data[17]           1           1                              100.00 
         22                    data_write_data[16]           1           1                              100.00 
         22                    data_write_data[15]           1           1                              100.00 
         22                    data_write_data[14]           1           1                              100.00 
         22                    data_write_data[13]           1           1                              100.00 
         22                    data_write_data[12]           1           1                              100.00 
         22                    data_write_data[11]           1           1                              100.00 
         22                    data_write_data[10]           1           1                              100.00 
         22                     data_write_data[0]           1           1                              100.00 
         23                         data_write_rdy           0           0                                0.00 
         27                                 halted           0           0                                0.00 
         29                             write_back           1           1                              100.00 
         29                                  fetch           1           1                              100.00 
         29                                execute           1           1                              100.00 
         29                                 decode           1           1                              100.00 
         30                               executed           1           1                              100.00 
         34                                  state               ENUM type       Value       Count 
                                                                     FETCH      100000      100.00 
                                                                    DECODE       99999      100.00 
                                                                   EXECUTE       99999      100.00 
                                                                WRITE_BACK       99999      100.00 
                                                                      HALT           0        0.00 
         34                             next_state               ENUM type       Value       Count 
                                                                     FETCH       99999      100.00 
                                                                    DECODE      100000      100.00 
                                                                   EXECUTE       99999      100.00 
                                                                WRITE_BACK       99999      100.00 
                                                                      HALT           0        0.00 
         37                                  pc[9]           0           0                                0.00 
         37                                  pc[8]           0           0                                0.00 
         37                                  pc[7]           0           0                                0.00 
         37                                  pc[6]           0           0                                0.00 
         37                                  pc[5]           0           0                                0.00 
         37                                  pc[4]           0           0                                0.00 
         37                                  pc[3]           0           0                                0.00 
         37                                 pc[31]           0           0                                0.00 
         37                                 pc[30]           0           0                                0.00 
         37                                  pc[2]           0           0                                0.00 
         37                                 pc[29]           0           0                                0.00 
         37                                 pc[28]           0           0                                0.00 
         37                                 pc[27]           0           0                                0.00 
         37                                 pc[26]           0           0                                0.00 
         37                                 pc[25]           0           0                                0.00 
         37                                 pc[24]           0           0                                0.00 
         37                                 pc[23]           0           0                                0.00 
         37                                 pc[22]           0           0                                0.00 
         37                                 pc[21]           0           0                                0.00 
         37                                 pc[20]           0           0                                0.00 
         37                                  pc[1]           0           0                                0.00 
         37                                 pc[19]           0           0                                0.00 
         37                                 pc[18]           0           0                                0.00 
         37                                 pc[17]           0           0                                0.00 
         37                                 pc[16]           0           0                                0.00 
         37                                 pc[15]           0           0                                0.00 
         37                                 pc[14]           0           0                                0.00 
         37                                 pc[13]           0           0                                0.00 
         37                                 pc[12]           0           0                                0.00 
         37                                 pc[11]           0           0                                0.00 
         37                                 pc[10]           0           0                                0.00 
         37                                  pc[0]           0           0                                0.00 
         37                                 op3[9]           1           1                              100.00 
         37                                 op3[8]           1           1                              100.00 
         37                                 op3[7]           1           1                              100.00 
         37                                 op3[6]           1           1                              100.00 
         37                                 op3[5]           1           1                              100.00 
         37                                 op3[4]           1           1                              100.00 
         37                                 op3[3]           1           1                              100.00 
         37                                op3[31]           1           1                              100.00 
         37                                op3[30]           1           1                              100.00 
         37                                 op3[2]           1           1                              100.00 
         37                                op3[29]           1           1                              100.00 
         37                                op3[28]           1           1                              100.00 
         37                                op3[27]           1           1                              100.00 
         37                                op3[26]           1           1                              100.00 
         37                                op3[25]           1           1                              100.00 
         37                                op3[24]           1           1                              100.00 
         37                                op3[23]           1           1                              100.00 
         37                                op3[22]           1           1                              100.00 
         37                                op3[21]           1           1                              100.00 
         37                                op3[20]           1           1                              100.00 
         37                                 op3[1]           1           1                              100.00 
         37                                op3[19]           1           1                              100.00 
         37                                op3[18]           1           1                              100.00 
         37                                op3[17]           1           1                              100.00 
         37                                op3[16]           1           1                              100.00 
         37                                op3[15]           1           1                              100.00 
         37                                op3[14]           1           1                              100.00 
         37                                op3[13]           1           1                              100.00 
         37                                op3[12]           1           1                              100.00 
         37                                op3[11]           1           1                              100.00 
         37                                op3[10]           1           1                              100.00 
         37                                 op3[0]           1           1                              100.00 
         37                                 op2[9]           1           1                              100.00 
         37                                 op2[8]           1           1                              100.00 
         37                                 op2[7]           1           1                              100.00 
         37                                 op2[6]           1           1                              100.00 
         37                                 op2[5]           1           1                              100.00 
         37                                 op2[4]           1           1                              100.00 
         37                                 op2[3]           1           1                              100.00 
         37                                op2[31]           1           1                              100.00 
         37                                op2[30]           1           1                              100.00 
         37                                 op2[2]           1           1                              100.00 
         37                                op2[29]           1           1                              100.00 
         37                                op2[28]           1           1                              100.00 
         37                                op2[27]           1           1                              100.00 
         37                                op2[26]           1           1                              100.00 
         37                                op2[25]           1           1                              100.00 
         37                                op2[24]           1           1                              100.00 
         37                                op2[23]           1           1                              100.00 
         37                                op2[22]           1           1                              100.00 
         37                                op2[21]           1           1                              100.00 
         37                                op2[20]           1           1                              100.00 
         37                                 op2[1]           1           1                              100.00 
         37                                op2[19]           1           1                              100.00 
         37                                op2[18]           1           1                              100.00 
         37                                op2[17]           1           1                              100.00 
         37                                op2[16]           1           1                              100.00 
         37                                op2[15]           1           1                              100.00 
         37                                op2[14]           1           1                              100.00 
         37                                op2[13]           1           1                              100.00 
         37                                op2[12]           1           1                              100.00 
         37                                op2[11]           1           1                              100.00 
         37                                op2[10]           1           1                              100.00 
         37                                 op2[0]           1           1                              100.00 
         37                                 op1[9]           1           1                              100.00 
         37                                 op1[8]           1           1                              100.00 
         37                                 op1[7]           1           1                              100.00 
         37                                 op1[6]           1           1                              100.00 
         37                                 op1[5]           1           1                              100.00 
         37                                 op1[4]           1           1                              100.00 
         37                                 op1[3]           1           1                              100.00 
         37                                op1[31]           1           1                              100.00 
         37                                op1[30]           1           1                              100.00 
         37                                 op1[2]           1           1                              100.00 
         37                                op1[29]           1           1                              100.00 
         37                                op1[28]           1           1                              100.00 
         37                                op1[27]           1           1                              100.00 
         37                                op1[26]           1           1                              100.00 
         37                                op1[25]           1           1                              100.00 
         37                                op1[24]           1           1                              100.00 
         37                                op1[23]           1           1                              100.00 
         37                                op1[22]           1           1                              100.00 
         37                                op1[21]           1           1                              100.00 
         37                                op1[20]           1           1                              100.00 
         37                                 op1[1]           1           1                              100.00 
         37                                op1[19]           1           1                              100.00 
         37                                op1[18]           1           1                              100.00 
         37                                op1[17]           1           1                              100.00 
         37                                op1[16]           1           1                              100.00 
         37                                op1[15]           1           1                              100.00 
         37                                op1[14]           1           1                              100.00 
         37                                op1[13]           1           1                              100.00 
         37                                op1[12]           1           1                              100.00 
         37                                op1[11]           1           1                              100.00 
         37                                op1[10]           1           1                              100.00 
         37                                 op1[0]           1           1                              100.00 
         38                              result[9]           1           1                              100.00 
         38                              result[8]           1           1                              100.00 
         38                              result[7]           1           1                              100.00 
         38                              result[6]           1           1                              100.00 
         38                              result[5]           1           1                              100.00 
         38                              result[4]           1           1                              100.00 
         38                              result[3]           1           1                              100.00 
         38                             result[31]           1           1                              100.00 
         38                             result[30]           1           1                              100.00 
         38                              result[2]           1           1                              100.00 
         38                             result[29]           1           1                              100.00 
         38                             result[28]           1           1                              100.00 
         38                             result[27]           1           1                              100.00 
         38                             result[26]           1           1                              100.00 
         38                             result[25]           1           1                              100.00 
         38                             result[24]           1           1                              100.00 
         38                             result[23]           1           1                              100.00 
         38                             result[22]           1           1                              100.00 
         38                             result[21]           1           1                              100.00 
         38                             result[20]           1           1                              100.00 
         38                              result[1]           1           1                              100.00 
         38                             result[19]           1           1                              100.00 
         38                             result[18]           1           1                              100.00 
         38                             result[17]           1           1                              100.00 
         38                             result[16]           1           1                              100.00 
         38                             result[15]           1           1                              100.00 
         38                             result[14]           1           1                              100.00 
         38                             result[13]           1           1                              100.00 
         38                             result[12]           1           1                              100.00 
         38                             result[11]           1           1                              100.00 
         38                             result[10]           1           1                              100.00 
         38                              result[0]           1           1                              100.00 
         38                          mcu_result[9]           1           1                              100.00 
         38                          mcu_result[8]           1           1                              100.00 
         38                          mcu_result[7]           1           1                              100.00 
         38                          mcu_result[6]           1           1                              100.00 
         38                          mcu_result[5]           1           1                              100.00 
         38                          mcu_result[4]           1           1                              100.00 
         38                          mcu_result[3]           1           1                              100.00 
         38                         mcu_result[31]           1           1                              100.00 
         38                         mcu_result[30]           1           1                              100.00 
         38                          mcu_result[2]           1           1                              100.00 
         38                         mcu_result[29]           1           1                              100.00 
         38                         mcu_result[28]           1           1                              100.00 
         38                         mcu_result[27]           1           1                              100.00 
         38                         mcu_result[26]           1           1                              100.00 
         38                         mcu_result[25]           1           1                              100.00 
         38                         mcu_result[24]           1           1                              100.00 
         38                         mcu_result[23]           1           1                              100.00 
         38                         mcu_result[22]           1           1                              100.00 
         38                         mcu_result[21]           1           1                              100.00 
         38                         mcu_result[20]           1           1                              100.00 
         38                          mcu_result[1]           1           1                              100.00 
         38                         mcu_result[19]           1           1                              100.00 
         38                         mcu_result[18]           1           1                              100.00 
         38                         mcu_result[17]           1           1                              100.00 
         38                         mcu_result[16]           1           1                              100.00 
         38                         mcu_result[15]           1           1                              100.00 
         38                         mcu_result[14]           1           1                              100.00 
         38                         mcu_result[13]           1           1                              100.00 
         38                         mcu_result[12]           1           1                              100.00 
         38                         mcu_result[11]           1           1                              100.00 
         38                         mcu_result[10]           1           1                              100.00 
         38                          mcu_result[0]           1           1                              100.00 
         38                          bcu_result[9]           0           0                                0.00 
         38                          bcu_result[8]           0           0                                0.00 
         38                          bcu_result[7]           0           0                                0.00 
         38                          bcu_result[6]           0           0                                0.00 
         38                          bcu_result[5]           0           0                                0.00 
         38                          bcu_result[4]           0           0                                0.00 
         38                          bcu_result[3]           0           0                                0.00 
         38                         bcu_result[31]           0           0                                0.00 
         38                         bcu_result[30]           0           0                                0.00 
         38                          bcu_result[2]           0           0                                0.00 
         38                         bcu_result[29]           0           0                                0.00 
         38                         bcu_result[28]           0           0                                0.00 
         38                         bcu_result[27]           0           0                                0.00 
         38                         bcu_result[26]           0           0                                0.00 
         38                         bcu_result[25]           0           0                                0.00 
         38                         bcu_result[24]           0           0                                0.00 
         38                         bcu_result[23]           0           0                                0.00 
         38                         bcu_result[22]           0           0                                0.00 
         38                         bcu_result[21]           0           0                                0.00 
         38                         bcu_result[20]           0           0                                0.00 
         38                          bcu_result[1]           0           0                                0.00 
         38                         bcu_result[19]           0           0                                0.00 
         38                         bcu_result[18]           0           0                                0.00 
         38                         bcu_result[17]           0           0                                0.00 
         38                         bcu_result[16]           0           0                                0.00 
         38                         bcu_result[15]           0           0                                0.00 
         38                         bcu_result[14]           0           0                                0.00 
         38                         bcu_result[13]           0           0                                0.00 
         38                         bcu_result[12]           0           0                                0.00 
         38                         bcu_result[11]           0           0                                0.00 
         38                         bcu_result[10]           0           0                                0.00 
         38                          bcu_result[0]           0           0                                0.00 
         38                          alu_result[9]           1           1                              100.00 
         38                          alu_result[8]           1           1                              100.00 
         38                          alu_result[7]           1           1                              100.00 
         38                          alu_result[6]           1           1                              100.00 
         38                          alu_result[5]           1           1                              100.00 
         38                          alu_result[4]           1           1                              100.00 
         38                          alu_result[3]           1           1                              100.00 
         38                         alu_result[31]           1           1                              100.00 
         38                         alu_result[30]           1           1                              100.00 
         38                          alu_result[2]           1           1                              100.00 
         38                         alu_result[29]           1           1                              100.00 
         38                         alu_result[28]           1           1                              100.00 
         38                         alu_result[27]           1           1                              100.00 
         38                         alu_result[26]           1           1                              100.00 
         38                         alu_result[25]           1           1                              100.00 
         38                         alu_result[24]           1           1                              100.00 
         38                         alu_result[23]           1           1                              100.00 
         38                         alu_result[22]           1           1                              100.00 
         38                         alu_result[21]           1           1                              100.00 
         38                         alu_result[20]           1           1                              100.00 
         38                          alu_result[1]           1           1                              100.00 
         38                         alu_result[19]           1           1                              100.00 
         38                         alu_result[18]           1           1                              100.00 
         38                         alu_result[17]           1           1                              100.00 
         38                         alu_result[16]           1           1                              100.00 
         38                         alu_result[15]           1           1                              100.00 
         38                         alu_result[14]           1           1                              100.00 
         38                         alu_result[13]           1           1                              100.00 
         38                         alu_result[12]           1           1                              100.00 
         38                         alu_result[11]           1           1                              100.00 
         38                         alu_result[10]           1           1                              100.00 
         38                          alu_result[0]           1           1                              100.00 
         39                                  rd[4]           1           1                              100.00 
         39                                  rd[3]           1           1                              100.00 
         39                                  rd[2]           1           1                              100.00 
         39                                  rd[1]           1           1                              100.00 
         39                                  rd[0]           1           1                              100.00 
         41                                   i[5]           0           0                                0.00 
         41                                   i[4]           0           0                                0.00 
         41                                   i[3]           0           0                                0.00 
         41                                   i[2]           0           0                                0.00 
         41                                   i[1]           0           0                                0.00 
         41                                   i[0]           0           0                                0.00 

Total Node Count     =        454 
Toggled Node Count   =        343 
Untoggled Node Count =        111 

Toggle Coverage      =      75.50% (678 of 898 bins)

COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /u_cpu/u_decoder/opcodes_cg                     100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                35         35          -                      
        missing/total bins:                                 0         35          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_decoder/opcodes_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_decoder/opcodes_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                35         35          -                      
        missing/total bins:                                 0         35          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin instr[ADDI]                                 10308          1          -    Covered              
        bin instr[STLI]                                 10256          1          -    Covered              
        bin instr[STLUI]                                10224          1          -    Covered              
        bin instr[ANDI]                                 10640          1          -    Covered              
        bin instr[ORI]                                  10754          1          -    Covered              
        bin instr[XORI]                                 10696          1          -    Covered              
        bin instr[SLLI]                                 10704          1          -    Covered              
        bin instr[SRAI]                                 10568          1          -    Covered              
        bin instr[LUI]                                  10384          1          -    Covered              
        bin instr[AUIPC]                                10808          1          -    Covered              
        bin instr[ADD]                                  10412          1          -    Covered              
        bin instr[SUB]                                  10560          1          -    Covered              
        bin instr[STL]                                  20776          1          -    Covered              
        bin instr[STLU]                                 10216          1          -    Covered              
        bin instr[AND]                                  10444          1          -    Covered              
        bin instr[OR]                                   10568          1          -    Covered              
        bin instr[XOR]                                  10348          1          -    Covered              
        bin instr[SLL]                                  11000          1          -    Covered              
        bin instr[SRA]                                  10568          1          -    Covered              
        bin instr[JAL]                                  10844          1          -    Covered              
        bin instr[JALR]                                 10611          1          -    Covered              
        bin instr[BEQ]                                  10696          1          -    Covered              
        bin instr[BNE]                                  11148          1          -    Covered              
        bin instr[BLT]                                  10540          1          -    Covered              
        bin instr[BLTU]                                 10012          1          -    Covered              
        bin instr[BGE]                                   9884          1          -    Covered              
        bin instr[BGEU]                                 10660          1          -    Covered              
        bin instr[LW]                                   10556          1          -    Covered              
        bin instr[LH]                                   10464          1          -    Covered              
        bin instr[LB]                                   10616          1          -    Covered              
        bin instr[LHU]                                  10260          1          -    Covered              
        bin instr[LBU]                                  10596          1          -    Covered              
        bin instr[SW]                                   10436          1          -    Covered              
        bin instr[SH]                                   10232          1          -    Covered              
        bin instr[SB]                                   10736          1          -    Covered              
 TYPE /u_cpu/u_decoder/regs_cg                        100.00%        100          -    Covered              
    covered/total bins:                                   467        467          -                      
    missing/total bins:                                     0        467          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint rs1                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint rs2                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint rd                                     100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                               448        448          -                      
        missing/total bins:                                 0        448          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_decoder/regs_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                   467        467          -                      
    missing/total bins:                                     0        467          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_decoder/regs_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin r_type                                     104892          1          -    Covered              
        bin i_type                                     157765          1          -    Covered              
        bin si_type                                     20480          1          -    Covered              
        bin u_type                                      21192          1          -    Covered              
        bin s_type                                      31404          1          -    Covered              
        bin b_type                                      62940          1          -    Covered              
        bin j_type                                      10844          1          -    Covered              
    Coverpoint rs1                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin n[0]                                       123865          1          -    Covered              
        bin n[1]                                        90543          1          -    Covered              
        bin n[2]                                        92716          1          -    Covered              
        bin n[3]                                        92892          1          -    Covered              
    Coverpoint rs2                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin n[0]                                       241976          1          -    Covered              
        bin n[1]                                        52692          1          -    Covered              
        bin n[2]                                        52640          1          -    Covered              
        bin n[3]                                        52708          1          -    Covered              
    Coverpoint rd                                     100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin n[0]                                       162561          1          -    Covered              
        bin n[1]                                        78768          1          -    Covered              
        bin n[2]                                        79459          1          -    Covered              
        bin n[3]                                        79228          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                               448        448          -                      
        missing/total bins:                                 0        448          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.cross_num_print_missing=0
        Auto, Default and User Defined Bins:
            bin <j_type,n[3],n[3],n[3]>                     8          1          -    Covered              
            bin <j_type,n[2],n[3],n[3]>                    13          1          -    Covered              
            bin <j_type,n[1],n[3],n[3]>                     9          1          -    Covered              
            bin <j_type,n[0],n[3],n[3]>                    22          1          -    Covered              
            bin <j_type,n[3],n[2],n[3]>                    10          1          -    Covered              
            bin <j_type,n[2],n[2],n[3]>                    13          1          -    Covered              
            bin <j_type,n[1],n[2],n[3]>                    11          1          -    Covered              
            bin <j_type,n[0],n[2],n[3]>                    16          1          -    Covered              
            bin <j_type,n[3],n[1],n[3]>                    17          1          -    Covered              
            bin <j_type,n[2],n[1],n[3]>                    15          1          -    Covered              
            bin <j_type,n[1],n[1],n[3]>                    11          1          -    Covered              
            bin <j_type,n[0],n[1],n[3]>                     9          1          -    Covered              
            bin <j_type,n[3],n[0],n[3]>                    76          1          -    Covered              
            bin <j_type,n[2],n[0],n[3]>                    92          1          -    Covered              
            bin <j_type,n[1],n[0],n[3]>                    80          1          -    Covered              
            bin <j_type,n[0],n[0],n[3]>                  2324          1          -    Covered              
            bin <j_type,n[3],n[3],n[2]>                    21          1          -    Covered              
            bin <j_type,n[2],n[3],n[2]>                    13          1          -    Covered              
            bin <j_type,n[1],n[3],n[2]>                    14          1          -    Covered              
            bin <j_type,n[0],n[3],n[2]>                    11          1          -    Covered              
            bin <j_type,n[3],n[2],n[2]>                    11          1          -    Covered              
            bin <j_type,n[2],n[2],n[2]>                    16          1          -    Covered              
            bin <j_type,n[1],n[2],n[2]>                    13          1          -    Covered              
            bin <j_type,n[0],n[2],n[2]>                     9          1          -    Covered              
            bin <j_type,n[3],n[1],n[2]>                    11          1          -    Covered              
            bin <j_type,n[2],n[1],n[2]>                     9          1          -    Covered              
            bin <j_type,n[1],n[1],n[2]>                    16          1          -    Covered              
            bin <j_type,n[0],n[1],n[2]>                    10          1          -    Covered              
            bin <j_type,n[3],n[0],n[2]>                    92          1          -    Covered              
            bin <j_type,n[2],n[0],n[2]>                    78          1          -    Covered              
            bin <j_type,n[1],n[0],n[2]>                    64          1          -    Covered              
            bin <j_type,n[0],n[0],n[2]>                  2289          1          -    Covered              
            bin <j_type,n[3],n[3],n[1]>                     7          1          -    Covered              
            bin <j_type,n[2],n[3],n[1]>                     6          1          -    Covered              
            bin <j_type,n[1],n[3],n[1]>                    13          1          -    Covered              
            bin <j_type,n[0],n[3],n[1]>                    15          1          -    Covered              
            bin <j_type,n[3],n[2],n[1]>                    16          1          -    Covered              
            bin <j_type,n[2],n[2],n[1]>                    13          1          -    Covered              
            bin <j_type,n[1],n[2],n[1]>                    11          1          -    Covered              
            bin <j_type,n[0],n[2],n[1]>                    14          1          -    Covered              
            bin <j_type,n[3],n[1],n[1]>                    13          1          -    Covered              
            bin <j_type,n[2],n[1],n[1]>                    10          1          -    Covered              
            bin <j_type,n[1],n[1],n[1]>                    12          1          -    Covered              
            bin <j_type,n[0],n[1],n[1]>                    18          1          -    Covered              
            bin <j_type,n[3],n[0],n[1]>                    89          1          -    Covered              
            bin <j_type,n[2],n[0],n[1]>                    88          1          -    Covered              
            bin <j_type,n[1],n[0],n[1]>                    73          1          -    Covered              
            bin <j_type,n[0],n[0],n[1]>                  2249          1          -    Covered              
            bin <j_type,n[3],n[3],n[0]>                    61          1          -    Covered              
            bin <j_type,n[2],n[3],n[0]>                    57          1          -    Covered              
            bin <j_type,n[1],n[3],n[0]>                    46          1          -    Covered              
            bin <j_type,n[0],n[3],n[0]>                    56          1          -    Covered              
            bin <j_type,n[3],n[2],n[0]>                    62          1          -    Covered              
            bin <j_type,n[2],n[2],n[0]>                    51          1          -    Covered              
            bin <j_type,n[1],n[2],n[0]>                    44          1          -    Covered              
            bin <j_type,n[0],n[2],n[0]>                    57          1          -    Covered              
            bin <j_type,n[3],n[1],n[0]>                    55          1          -    Covered              
            bin <j_type,n[2],n[1],n[0]>                    50          1          -    Covered              
            bin <j_type,n[1],n[1],n[0]>                    53          1          -    Covered              
            bin <j_type,n[0],n[1],n[0]>                    54          1          -    Covered              
            bin <j_type,n[3],n[0],n[0]>                   106          1          -    Covered              
            bin <j_type,n[2],n[0],n[0]>                   108          1          -    Covered              
            bin <j_type,n[1],n[0],n[0]>                   108          1          -    Covered              
            bin <j_type,n[0],n[0],n[0]>                  1826          1          -    Covered              
            bin <b_type,n[3],n[3],n[3]>                    80          1          -    Covered              
            bin <b_type,n[2],n[3],n[3]>                    72          1          -    Covered              
            bin <b_type,n[1],n[3],n[3]>                    69          1          -    Covered              
            bin <b_type,n[0],n[3],n[3]>                    73          1          -    Covered              
            bin <b_type,n[3],n[2],n[3]>                    67          1          -    Covered              
            bin <b_type,n[2],n[2],n[3]>                    66          1          -    Covered              
            bin <b_type,n[1],n[2],n[3]>                    79          1          -    Covered              
            bin <b_type,n[0],n[2],n[3]>                    71          1          -    Covered              
            bin <b_type,n[3],n[1],n[3]>                    67          1          -    Covered              
            bin <b_type,n[2],n[1],n[3]>                    70          1          -    Covered              
            bin <b_type,n[1],n[1],n[3]>                    72          1          -    Covered              
            bin <b_type,n[0],n[1],n[3]>                    77          1          -    Covered              
            bin <b_type,n[3],n[0],n[3]>                   465          1          -    Covered              
            bin <b_type,n[2],n[0],n[3]>                   461          1          -    Covered              
            bin <b_type,n[1],n[0],n[3]>                   474          1          -    Covered              
            bin <b_type,n[0],n[0],n[3]>                   845          1          -    Covered              
            bin <b_type,n[3],n[3],n[2]>                    64          1          -    Covered              
            bin <b_type,n[2],n[3],n[2]>                    83          1          -    Covered              
            bin <b_type,n[1],n[3],n[2]>                    82          1          -    Covered              
            bin <b_type,n[0],n[3],n[2]>                    72          1          -    Covered              
            bin <b_type,n[3],n[2],n[2]>                    87          1          -    Covered              
            bin <b_type,n[2],n[2],n[2]>                    78          1          -    Covered              
            bin <b_type,n[1],n[2],n[2]>                    81          1          -    Covered              
            bin <b_type,n[0],n[2],n[2]>                    70          1          -    Covered              
            bin <b_type,n[3],n[1],n[2]>                    77          1          -    Covered              
            bin <b_type,n[2],n[1],n[2]>                    97          1          -    Covered              
            bin <b_type,n[1],n[1],n[2]>                    71          1          -    Covered              
            bin <b_type,n[0],n[1],n[2]>                    62          1          -    Covered              
            bin <b_type,n[3],n[0],n[2]>                   497          1          -    Covered              
            bin <b_type,n[2],n[0],n[2]>                   460          1          -    Covered              
            bin <b_type,n[1],n[0],n[2]>                   478          1          -    Covered              
            bin <b_type,n[0],n[0],n[2]>                   818          1          -    Covered              
            bin <b_type,n[3],n[3],n[1]>                    76          1          -    Covered              
            bin <b_type,n[2],n[3],n[1]>                    59          1          -    Covered              
            bin <b_type,n[1],n[3],n[1]>                    75          1          -    Covered              
            bin <b_type,n[0],n[3],n[1]>                    69          1          -    Covered              
            bin <b_type,n[3],n[2],n[1]>                    80          1          -    Covered              
            bin <b_type,n[2],n[2],n[1]>                    53          1          -    Covered              
            bin <b_type,n[1],n[2],n[1]>                    67          1          -    Covered              
            bin <b_type,n[0],n[2],n[1]>                    68          1          -    Covered              
            bin <b_type,n[3],n[1],n[1]>                    62          1          -    Covered              
            bin <b_type,n[2],n[1],n[1]>                    72          1          -    Covered              
            bin <b_type,n[1],n[1],n[1]>                    71          1          -    Covered              
            bin <b_type,n[0],n[1],n[1]>                    75          1          -    Covered              
            bin <b_type,n[3],n[0],n[1]>                   463          1          -    Covered              
            bin <b_type,n[2],n[0],n[1]>                   471          1          -    Covered              
            bin <b_type,n[1],n[0],n[1]>                   485          1          -    Covered              
            bin <b_type,n[0],n[0],n[1]>                   775          1          -    Covered              
            bin <b_type,n[3],n[3],n[0]>                  3368          1          -    Covered              
            bin <b_type,n[2],n[3],n[0]>                  3247          1          -    Covered              
            bin <b_type,n[1],n[3],n[0]>                  3076          1          -    Covered              
            bin <b_type,n[0],n[3],n[0]>                  3378          1          -    Covered              
            bin <b_type,n[3],n[2],n[0]>                  3322          1          -    Covered              
            bin <b_type,n[2],n[2],n[0]>                  3360          1          -    Covered              
            bin <b_type,n[1],n[2],n[0]>                  3209          1          -    Covered              
            bin <b_type,n[0],n[2],n[0]>                  3171          1          -    Covered              
            bin <b_type,n[3],n[1],n[0]>                  3310          1          -    Covered              
            bin <b_type,n[2],n[1],n[0]>                  3197          1          -    Covered              
            bin <b_type,n[1],n[1],n[0]>                  3094          1          -    Covered              
            bin <b_type,n[0],n[1],n[0]>                  3235          1          -    Covered              
            bin <b_type,n[3],n[0],n[0]>                  3743          1          -    Covered              
            bin <b_type,n[2],n[0],n[0]>                  3527          1          -    Covered              
            bin <b_type,n[1],n[0],n[0]>                  3799          1          -    Covered              
            bin <b_type,n[0],n[0],n[0]>                  3598          1          -    Covered              
            bin <s_type,n[3],n[3],n[3]>                    26          1          -    Covered              
            bin <s_type,n[2],n[3],n[3]>                    40          1          -    Covered              
            bin <s_type,n[1],n[3],n[3]>                    25          1          -    Covered              
            bin <s_type,n[0],n[3],n[3]>                    27          1          -    Covered              
            bin <s_type,n[3],n[2],n[3]>                    38          1          -    Covered              
            bin <s_type,n[2],n[2],n[3]>                    37          1          -    Covered              
            bin <s_type,n[1],n[2],n[3]>                    41          1          -    Covered              
            bin <s_type,n[0],n[2],n[3]>                    46          1          -    Covered              
            bin <s_type,n[3],n[1],n[3]>                    40          1          -    Covered              
            bin <s_type,n[2],n[1],n[3]>                    29          1          -    Covered              
            bin <s_type,n[1],n[1],n[3]>                    43          1          -    Covered              
            bin <s_type,n[0],n[1],n[3]>                    39          1          -    Covered              
            bin <s_type,n[3],n[0],n[3]>                   254          1          -    Covered              
            bin <s_type,n[2],n[0],n[3]>                   250          1          -    Covered              
            bin <s_type,n[1],n[0],n[3]>                   226          1          -    Covered              
            bin <s_type,n[0],n[0],n[3]>                   363          1          -    Covered              
            bin <s_type,n[3],n[3],n[2]>                    32          1          -    Covered              
            bin <s_type,n[2],n[3],n[2]>                    40          1          -    Covered              
            bin <s_type,n[1],n[3],n[2]>                    30          1          -    Covered              
            bin <s_type,n[0],n[3],n[2]>                    30          1          -    Covered              
            bin <s_type,n[3],n[2],n[2]>                    39          1          -    Covered              
            bin <s_type,n[2],n[2],n[2]>                    36          1          -    Covered              
            bin <s_type,n[1],n[2],n[2]>                    48          1          -    Covered              
            bin <s_type,n[0],n[2],n[2]>                    35          1          -    Covered              
            bin <s_type,n[3],n[1],n[2]>                    38          1          -    Covered              
            bin <s_type,n[2],n[1],n[2]>                    39          1          -    Covered              
            bin <s_type,n[1],n[1],n[2]>                    38          1          -    Covered              
            bin <s_type,n[0],n[1],n[2]>                    35          1          -    Covered              
            bin <s_type,n[3],n[0],n[2]>                   218          1          -    Covered              
            bin <s_type,n[2],n[0],n[2]>                   241          1          -    Covered              
            bin <s_type,n[1],n[0],n[2]>                   233          1          -    Covered              
            bin <s_type,n[0],n[0],n[2]>                   415          1          -    Covered              
            bin <s_type,n[3],n[3],n[1]>                    36          1          -    Covered              
            bin <s_type,n[2],n[3],n[1]>                    37          1          -    Covered              
            bin <s_type,n[1],n[3],n[1]>                    32          1          -    Covered              
            bin <s_type,n[0],n[3],n[1]>                    44          1          -    Covered              
            bin <s_type,n[3],n[2],n[1]>                    36          1          -    Covered              
            bin <s_type,n[2],n[2],n[1]>                    37          1          -    Covered              
            bin <s_type,n[1],n[2],n[1]>                    36          1          -    Covered              
            bin <s_type,n[0],n[2],n[1]>                    38          1          -    Covered              
            bin <s_type,n[3],n[1],n[1]>                    47          1          -    Covered              
            bin <s_type,n[2],n[1],n[1]>                    33          1          -    Covered              
            bin <s_type,n[1],n[1],n[1]>                    32          1          -    Covered              
            bin <s_type,n[0],n[1],n[1]>                    35          1          -    Covered              
            bin <s_type,n[3],n[0],n[1]>                   245          1          -    Covered              
            bin <s_type,n[2],n[0],n[1]>                   251          1          -    Covered              
            bin <s_type,n[1],n[0],n[1]>                   235          1          -    Covered              
            bin <s_type,n[0],n[0],n[1]>                   367          1          -    Covered              
            bin <s_type,n[3],n[3],n[0]>                  1756          1          -    Covered              
            bin <s_type,n[2],n[3],n[0]>                  1679          1          -    Covered              
            bin <s_type,n[1],n[3],n[0]>                  1532          1          -    Covered              
            bin <s_type,n[0],n[3],n[0]>                  1624          1          -    Covered              
            bin <s_type,n[3],n[2],n[0]>                  1768          1          -    Covered              
            bin <s_type,n[2],n[2],n[0]>                  1585          1          -    Covered              
            bin <s_type,n[1],n[2],n[0]>                  1640          1          -    Covered              
            bin <s_type,n[0],n[2],n[0]>                  1604          1          -    Covered              
            bin <s_type,n[3],n[1],n[0]>                  1724          1          -    Covered              
            bin <s_type,n[2],n[1],n[0]>                  1663          1          -    Covered              
            bin <s_type,n[1],n[1],n[0]>                  1574          1          -    Covered              
            bin <s_type,n[0],n[1],n[0]>                  1568          1          -    Covered              
            bin <s_type,n[3],n[0],n[0]>                  1705          1          -    Covered              
            bin <s_type,n[2],n[0],n[0]>                  1744          1          -    Covered              
            bin <s_type,n[1],n[0],n[0]>                  1704          1          -    Covered              
            bin <s_type,n[0],n[0],n[0]>                  1922          1          -    Covered              
            bin <u_type,n[3],n[3],n[3]>                    26          1          -    Covered              
            bin <u_type,n[2],n[3],n[3]>                    29          1          -    Covered              
            bin <u_type,n[1],n[3],n[3]>                    17          1          -    Covered              
            bin <u_type,n[0],n[3],n[3]>                    24          1          -    Covered              
            bin <u_type,n[3],n[2],n[3]>                    21          1          -    Covered              
            bin <u_type,n[2],n[2],n[3]>                    29          1          -    Covered              
            bin <u_type,n[1],n[2],n[3]>                    25          1          -    Covered              
            bin <u_type,n[0],n[2],n[3]>                    28          1          -    Covered              
            bin <u_type,n[3],n[1],n[3]>                    22          1          -    Covered              
            bin <u_type,n[2],n[1],n[3]>                    31          1          -    Covered              
            bin <u_type,n[1],n[1],n[3]>                    35          1          -    Covered              
            bin <u_type,n[0],n[1],n[3]>                    26          1          -    Covered              
            bin <u_type,n[3],n[0],n[3]>                   135          1          -    Covered              
            bin <u_type,n[2],n[0],n[3]>                   139          1          -    Covered              
            bin <u_type,n[1],n[0],n[3]>                   154          1          -    Covered              
            bin <u_type,n[0],n[0],n[3]>                  4372          1          -    Covered              
            bin <u_type,n[3],n[3],n[2]>                    25          1          -    Covered              
            bin <u_type,n[2],n[3],n[2]>                    19          1          -    Covered              
            bin <u_type,n[1],n[3],n[2]>                    18          1          -    Covered              
            bin <u_type,n[0],n[3],n[2]>                    20          1          -    Covered              
            bin <u_type,n[3],n[2],n[2]>                    28          1          -    Covered              
            bin <u_type,n[2],n[2],n[2]>                    22          1          -    Covered              
            bin <u_type,n[1],n[2],n[2]>                    20          1          -    Covered              
            bin <u_type,n[0],n[2],n[2]>                    30          1          -    Covered              
            bin <u_type,n[3],n[1],n[2]>                    27          1          -    Covered              
            bin <u_type,n[2],n[1],n[2]>                    27          1          -    Covered              
            bin <u_type,n[1],n[1],n[2]>                    20          1          -    Covered              
            bin <u_type,n[0],n[1],n[2]>                    30          1          -    Covered              
            bin <u_type,n[3],n[0],n[2]>                   170          1          -    Covered              
            bin <u_type,n[2],n[0],n[2]>                   184          1          -    Covered              
            bin <u_type,n[1],n[0],n[2]>                   132          1          -    Covered              
            bin <u_type,n[0],n[0],n[2]>                  4451          1          -    Covered              
            bin <u_type,n[3],n[3],n[1]>                    35          1          -    Covered              
            bin <u_type,n[2],n[3],n[1]>                    24          1          -    Covered              
            bin <u_type,n[1],n[3],n[1]>                    26          1          -    Covered              
            bin <u_type,n[0],n[3],n[1]>                    28          1          -    Covered              
            bin <u_type,n[3],n[2],n[1]>                    26          1          -    Covered              
            bin <u_type,n[2],n[2],n[1]>                    15          1          -    Covered              
            bin <u_type,n[1],n[2],n[1]>                    28          1          -    Covered              
            bin <u_type,n[0],n[2],n[1]>                    23          1          -    Covered              
            bin <u_type,n[3],n[1],n[1]>                    29          1          -    Covered              
            bin <u_type,n[2],n[1],n[1]>                    17          1          -    Covered              
            bin <u_type,n[1],n[1],n[1]>                    28          1          -    Covered              
            bin <u_type,n[0],n[1],n[1]>                    20          1          -    Covered              
            bin <u_type,n[3],n[0],n[1]>                   153          1          -    Covered              
            bin <u_type,n[2],n[0],n[1]>                   177          1          -    Covered              
            bin <u_type,n[1],n[0],n[1]>                   153          1          -    Covered              
            bin <u_type,n[0],n[0],n[1]>                  4566          1          -    Covered              
            bin <u_type,n[3],n[3],n[0]>                   100          1          -    Covered              
            bin <u_type,n[2],n[3],n[0]>                   103          1          -    Covered              
            bin <u_type,n[1],n[3],n[0]>                   102          1          -    Covered              
            bin <u_type,n[0],n[3],n[0]>                    97          1          -    Covered              
            bin <u_type,n[3],n[2],n[0]>                   112          1          -    Covered              
            bin <u_type,n[2],n[2],n[0]>                   100          1          -    Covered              
            bin <u_type,n[1],n[2],n[0]>                   103          1          -    Covered              
            bin <u_type,n[0],n[2],n[0]>                   100          1          -    Covered              
            bin <u_type,n[3],n[1],n[0]>                   101          1          -    Covered              
            bin <u_type,n[2],n[1],n[0]>                   114          1          -    Covered              
            bin <u_type,n[1],n[1],n[0]>                    90          1          -    Covered              
            bin <u_type,n[0],n[1],n[0]>                   114          1          -    Covered              
            bin <u_type,n[3],n[0],n[0]>                   206          1          -    Covered              
            bin <u_type,n[2],n[0],n[0]>                   211          1          -    Covered              
            bin <u_type,n[1],n[0],n[0]>                   211          1          -    Covered              
            bin <u_type,n[0],n[0],n[0]>                  3644          1          -    Covered              
            bin <si_type,n[3],n[3],n[3]>                   30          1          -    Covered              
            bin <si_type,n[2],n[3],n[3]>                   27          1          -    Covered              
            bin <si_type,n[1],n[3],n[3]>                   27          1          -    Covered              
            bin <si_type,n[0],n[3],n[3]>                   21          1          -    Covered              
            bin <si_type,n[3],n[2],n[3]>                   14          1          -    Covered              
            bin <si_type,n[2],n[2],n[3]>                   20          1          -    Covered              
            bin <si_type,n[1],n[2],n[3]>                   22          1          -    Covered              
            bin <si_type,n[0],n[2],n[3]>                   17          1          -    Covered              
            bin <si_type,n[3],n[1],n[3]>                   15          1          -    Covered              
            bin <si_type,n[2],n[1],n[3]>                   29          1          -    Covered              
            bin <si_type,n[1],n[1],n[3]>                   22          1          -    Covered              
            bin <si_type,n[0],n[1],n[3]>                   19          1          -    Covered              
            bin <si_type,n[3],n[0],n[3]>                 1211          1          -    Covered              
            bin <si_type,n[2],n[0],n[3]>                 1220          1          -    Covered              
            bin <si_type,n[1],n[0],n[3]>                 1059          1          -    Covered              
            bin <si_type,n[0],n[0],n[3]>                 1227          1          -    Covered              
            bin <si_type,n[3],n[3],n[2]>                   19          1          -    Covered              
            bin <si_type,n[2],n[3],n[2]>                   25          1          -    Covered              
            bin <si_type,n[1],n[3],n[2]>                   25          1          -    Covered              
            bin <si_type,n[0],n[3],n[2]>                   23          1          -    Covered              
            bin <si_type,n[3],n[2],n[2]>                   25          1          -    Covered              
            bin <si_type,n[2],n[2],n[2]>                   33          1          -    Covered              
            bin <si_type,n[1],n[2],n[2]>                   22          1          -    Covered              
            bin <si_type,n[0],n[2],n[2]>                   30          1          -    Covered              
            bin <si_type,n[3],n[1],n[2]>                   18          1          -    Covered              
            bin <si_type,n[2],n[1],n[2]>                   23          1          -    Covered              
            bin <si_type,n[1],n[1],n[2]>                   35          1          -    Covered              
            bin <si_type,n[0],n[1],n[2]>                   22          1          -    Covered              
            bin <si_type,n[3],n[0],n[2]>                 1234          1          -    Covered              
            bin <si_type,n[2],n[0],n[2]>                 1126          1          -    Covered              
            bin <si_type,n[1],n[0],n[2]>                 1021          1          -    Covered              
            bin <si_type,n[0],n[0],n[2]>                 1260          1          -    Covered              
            bin <si_type,n[3],n[3],n[1]>                   21          1          -    Covered              
            bin <si_type,n[2],n[3],n[1]>                   30          1          -    Covered              
            bin <si_type,n[1],n[3],n[1]>                   12          1          -    Covered              
            bin <si_type,n[0],n[3],n[1]>                   26          1          -    Covered              
            bin <si_type,n[3],n[2],n[1]>                   24          1          -    Covered              
            bin <si_type,n[2],n[2],n[1]>                   22          1          -    Covered              
            bin <si_type,n[1],n[2],n[1]>                   27          1          -    Covered              
            bin <si_type,n[0],n[2],n[1]>                   30          1          -    Covered              
            bin <si_type,n[3],n[1],n[1]>                   17          1          -    Covered              
            bin <si_type,n[2],n[1],n[1]>                   26          1          -    Covered              
            bin <si_type,n[1],n[1],n[1]>                   34          1          -    Covered              
            bin <si_type,n[0],n[1],n[1]>                   24          1          -    Covered              
            bin <si_type,n[3],n[0],n[1]>                 1226          1          -    Covered              
            bin <si_type,n[2],n[0],n[1]>                 1119          1          -    Covered              
            bin <si_type,n[1],n[0],n[1]>                 1123          1          -    Covered              
            bin <si_type,n[0],n[0],n[1]>                 1300          1          -    Covered              
            bin <si_type,n[3],n[3],n[0]>                  103          1          -    Covered              
            bin <si_type,n[2],n[3],n[0]>                   97          1          -    Covered              
            bin <si_type,n[1],n[3],n[0]>                  101          1          -    Covered              
            bin <si_type,n[0],n[3],n[0]>                   95          1          -    Covered              
            bin <si_type,n[3],n[2],n[0]>                  117          1          -    Covered              
            bin <si_type,n[2],n[2],n[0]>                   99          1          -    Covered              
            bin <si_type,n[1],n[2],n[0]>                  104          1          -    Covered              
            bin <si_type,n[0],n[2],n[0]>                  100          1          -    Covered              
            bin <si_type,n[3],n[1],n[0]>                  103          1          -    Covered              
            bin <si_type,n[2],n[1],n[0]>                   99          1          -    Covered              
            bin <si_type,n[1],n[1],n[0]>                   95          1          -    Covered              
            bin <si_type,n[0],n[1],n[0]>                   84          1          -    Covered              
            bin <si_type,n[3],n[0],n[0]>                 1058          1          -    Covered              
            bin <si_type,n[2],n[0],n[0]>                 1080          1          -    Covered              
            bin <si_type,n[1],n[0],n[0]>                 1029          1          -    Covered              
            bin <si_type,n[0],n[0],n[0]>                 1134          1          -    Covered              
            bin <i_type,n[3],n[3],n[3]>                   510          1          -    Covered              
            bin <i_type,n[2],n[3],n[3]>                   596          1          -    Covered              
            bin <i_type,n[1],n[3],n[3]>                   513          1          -    Covered              
            bin <i_type,n[0],n[3],n[3]>                   633          1          -    Covered              
            bin <i_type,n[3],n[2],n[3]>                   539          1          -    Covered              
            bin <i_type,n[2],n[2],n[3]>                   514          1          -    Covered              
            bin <i_type,n[1],n[2],n[3]>                   585          1          -    Covered              
            bin <i_type,n[0],n[2],n[3]>                   550          1          -    Covered              
            bin <i_type,n[3],n[1],n[3]>                   593          1          -    Covered              
            bin <i_type,n[2],n[1],n[3]>                   562          1          -    Covered              
            bin <i_type,n[1],n[1],n[3]>                   573          1          -    Covered              
            bin <i_type,n[0],n[1],n[3]>                   640          1          -    Covered              
            bin <i_type,n[3],n[0],n[3]>                  7895          1          -    Covered              
            bin <i_type,n[2],n[0],n[3]>                  7656          1          -    Covered              
            bin <i_type,n[1],n[0],n[3]>                  7649          1          -    Covered              
            bin <i_type,n[0],n[0],n[3]>                  8584          1          -    Covered              
            bin <i_type,n[3],n[3],n[2]>                   494          1          -    Covered              
            bin <i_type,n[2],n[3],n[2]>                   600          1          -    Covered              
            bin <i_type,n[1],n[3],n[2]>                   504          1          -    Covered              
            bin <i_type,n[0],n[3],n[2]>                   531          1          -    Covered              
            bin <i_type,n[3],n[2],n[2]>                   561          1          -    Covered              
            bin <i_type,n[2],n[2],n[2]>                   671          1          -    Covered              
            bin <i_type,n[1],n[2],n[2]>                   551          1          -    Covered              
            bin <i_type,n[0],n[2],n[2]>                   534          1          -    Covered              
            bin <i_type,n[3],n[1],n[2]>                   547          1          -    Covered              
            bin <i_type,n[2],n[1],n[2]>                   574          1          -    Covered              
            bin <i_type,n[1],n[1],n[2]>                   584          1          -    Covered              
            bin <i_type,n[0],n[1],n[2]>                   487          1          -    Covered              
            bin <i_type,n[3],n[0],n[2]>                  7647          1          -    Covered              
            bin <i_type,n[2],n[0],n[2]>                  7854          1          -    Covered              
            bin <i_type,n[1],n[0],n[2]>                  7803          1          -    Covered              
            bin <i_type,n[0],n[0],n[2]>                  8698          1          -    Covered              
            bin <i_type,n[3],n[3],n[1]>                   554          1          -    Covered              
            bin <i_type,n[2],n[3],n[1]>                   574          1          -    Covered              
            bin <i_type,n[1],n[3],n[1]>                   499          1          -    Covered              
            bin <i_type,n[0],n[3],n[1]>                   585          1          -    Covered              
            bin <i_type,n[3],n[2],n[1]>                   574          1          -    Covered              
            bin <i_type,n[2],n[2],n[1]>                   506          1          -    Covered              
            bin <i_type,n[1],n[2],n[1]>                   623          1          -    Covered              
            bin <i_type,n[0],n[2],n[1]>                   550          1          -    Covered              
            bin <i_type,n[3],n[1],n[1]>                   590          1          -    Covered              
            bin <i_type,n[2],n[1],n[1]>                   543          1          -    Covered              
            bin <i_type,n[1],n[1],n[1]>                   547          1          -    Covered              
            bin <i_type,n[0],n[1],n[1]>                   525          1          -    Covered              
            bin <i_type,n[3],n[0],n[1]>                  7622          1          -    Covered              
            bin <i_type,n[2],n[0],n[1]>                  7651          1          -    Covered              
            bin <i_type,n[1],n[0],n[1]>                  7523          1          -    Covered              
            bin <i_type,n[0],n[0],n[1]>                  8609          1          -    Covered              
            bin <i_type,n[3],n[3],n[0]>                  1096          1          -    Covered              
            bin <i_type,n[2],n[3],n[0]>                  1097          1          -    Covered              
            bin <i_type,n[1],n[3],n[0]>                  1030          1          -    Covered              
            bin <i_type,n[0],n[3],n[0]>                  1111          1          -    Covered              
            bin <i_type,n[3],n[2],n[0]>                  1085          1          -    Covered              
            bin <i_type,n[2],n[2],n[0]>                  1053          1          -    Covered              
            bin <i_type,n[1],n[2],n[0]>                  1064          1          -    Covered              
            bin <i_type,n[0],n[2],n[0]>                  1057          1          -    Covered              
            bin <i_type,n[3],n[1],n[0]>                  1102          1          -    Covered              
            bin <i_type,n[2],n[1],n[0]>                  1076          1          -    Covered              
            bin <i_type,n[1],n[1],n[0]>                  1075          1          -    Covered              
            bin <i_type,n[0],n[1],n[0]>                  1022          1          -    Covered              
            bin <i_type,n[3],n[0],n[0]>                  7072          1          -    Covered              
            bin <i_type,n[2],n[0],n[0]>                  7351          1          -    Covered              
            bin <i_type,n[1],n[0],n[0]>                  7195          1          -    Covered              
            bin <i_type,n[0],n[0],n[0]>                  7971          1          -    Covered              
            bin <r_type,n[3],n[3],n[3]>                  1436          1          -    Covered              
            bin <r_type,n[2],n[3],n[3]>                  1411          1          -    Covered              
            bin <r_type,n[1],n[3],n[3]>                  1284          1          -    Covered              
            bin <r_type,n[0],n[3],n[3]>                  1429          1          -    Covered              
            bin <r_type,n[3],n[2],n[3]>                  1288          1          -    Covered              
            bin <r_type,n[2],n[2],n[3]>                  1386          1          -    Covered              
            bin <r_type,n[1],n[2],n[3]>                  1398          1          -    Covered              
            bin <r_type,n[0],n[2],n[3]>                  1433          1          -    Covered              
            bin <r_type,n[3],n[1],n[3]>                  1371          1          -    Covered              
            bin <r_type,n[2],n[1],n[3]>                  1434          1          -    Covered              
            bin <r_type,n[1],n[1],n[3]>                  1484          1          -    Covered              
            bin <r_type,n[0],n[1],n[3]>                  1439          1          -    Covered              
            bin <r_type,n[3],n[0],n[3]>                  2057          1          -    Covered              
            bin <r_type,n[2],n[0],n[3]>                  1972          1          -    Covered              
            bin <r_type,n[1],n[0],n[3]>                  2053          1          -    Covered              
            bin <r_type,n[0],n[0],n[3]>                  2548          1          -    Covered              
            bin <r_type,n[3],n[3],n[2]>                  1350          1          -    Covered              
            bin <r_type,n[2],n[3],n[2]>                  1474          1          -    Covered              
            bin <r_type,n[1],n[3],n[2]>                  1318          1          -    Covered              
            bin <r_type,n[0],n[3],n[2]>                  1319          1          -    Covered              
            bin <r_type,n[3],n[2],n[2]>                  1441          1          -    Covered              
            bin <r_type,n[2],n[2],n[2]>                  1563          1          -    Covered              
            bin <r_type,n[1],n[2],n[2]>                  1427          1          -    Covered              
            bin <r_type,n[0],n[2],n[2]>                  1370          1          -    Covered              
            bin <r_type,n[3],n[1],n[2]>                  1437          1          -    Covered              
            bin <r_type,n[2],n[1],n[2]>                  1448          1          -    Covered              
            bin <r_type,n[1],n[1],n[2]>                  1442          1          -    Covered              
            bin <r_type,n[0],n[1],n[2]>                  1329          1          -    Covered              
            bin <r_type,n[3],n[0],n[2]>                  2032          1          -    Covered              
            bin <r_type,n[2],n[0],n[2]>                  2119          1          -    Covered              
            bin <r_type,n[1],n[0],n[2]>                  1920          1          -    Covered              
            bin <r_type,n[0],n[0],n[2]>                  2581          1          -    Covered              
            bin <r_type,n[3],n[3],n[1]>                  1370          1          -    Covered              
            bin <r_type,n[2],n[3],n[1]>                  1387          1          -    Covered              
            bin <r_type,n[1],n[3],n[1]>                  1298          1          -    Covered              
            bin <r_type,n[0],n[3],n[1]>                  1478          1          -    Covered              
            bin <r_type,n[3],n[2],n[1]>                  1400          1          -    Covered              
            bin <r_type,n[2],n[2],n[1]>                  1285          1          -    Covered              
            bin <r_type,n[1],n[2],n[1]>                  1395          1          -    Covered              
            bin <r_type,n[0],n[2],n[1]>                  1364          1          -    Covered              
            bin <r_type,n[3],n[1],n[1]>                  1458          1          -    Covered              
            bin <r_type,n[2],n[1],n[1]>                  1330          1          -    Covered              
            bin <r_type,n[1],n[1],n[1]>                  1368          1          -    Covered              
            bin <r_type,n[0],n[1],n[1]>                  1496          1          -    Covered              
            bin <r_type,n[3],n[0],n[1]>                  2113          1          -    Covered              
            bin <r_type,n[2],n[0],n[1]>                  2192          1          -    Covered              
            bin <r_type,n[1],n[0],n[1]>                  1914          1          -    Covered              
            bin <r_type,n[0],n[0],n[1]>                  2514          1          -    Covered              
            bin <r_type,n[3],n[3],n[0]>                  1633          1          -    Covered              
            bin <r_type,n[2],n[3],n[0]>                  1725          1          -    Covered              
            bin <r_type,n[1],n[3],n[0]>                  1598          1          -    Covered              
            bin <r_type,n[0],n[3],n[0]>                  1638          1          -    Covered              
            bin <r_type,n[3],n[2],n[0]>                  1537          1          -    Covered              
            bin <r_type,n[2],n[2],n[0]>                  1632          1          -    Covered              
            bin <r_type,n[1],n[2],n[0]>                  1616          1          -    Covered              
            bin <r_type,n[0],n[2],n[0]>                  1577          1          -    Covered              
            bin <r_type,n[3],n[1],n[0]>                  1592          1          -    Covered              
            bin <r_type,n[2],n[1],n[0]>                  1576          1          -    Covered              
            bin <r_type,n[1],n[1],n[0]>                  1630          1          -    Covered              
            bin <r_type,n[0],n[1],n[0]>                  1572          1          -    Covered              
            bin <r_type,n[3],n[0],n[0]>                  2178          1          -    Covered              
            bin <r_type,n[2],n[0],n[0]>                  2282          1          -    Covered              
            bin <r_type,n[1],n[0],n[0]>                  2171          1          -    Covered              
            bin <r_type,n[0],n[0],n[0]>                  2580          1          -    Covered              
 TYPE /u_cpu/u_decoder/one_operand_cg                 100.00%        100          -    Covered              
    covered/total bins:                                     7          7          -                      
    missing/total bins:                                     0          7          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_decoder/one_operand_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                     7          7          -                      
    missing/total bins:                                     0          7          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_decoder/one_operand_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin one_operand                                 32036          1          -    Covered              
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin negative                                   163703          1          -    Covered              
        bin zero                                        11521          1          -    Covered              
        bin positive                                   224794          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.cross_num_print_missing=0
        Auto, Default and User Defined Bins:
            bin <one_operand,positive>                  15893          1          -    Covered              
            bin <one_operand,zero>                        229          1          -    Covered              
            bin <one_operand,negative>                  15914          1          -    Covered              
 TYPE /u_cpu/u_decoder/two_operand_cg                 100.00%        100          -    Covered              
    covered/total bins:                                    16         16          -                      
    missing/total bins:                                     0         16          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 9          9          -                      
        missing/total bins:                                 0          9          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_decoder/two_operand_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    16         16          -                      
    missing/total bins:                                     0         16          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_decoder/two_operand_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin two_operand                                252145          1          -    Covered              
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin negative                                   163703          1          -    Covered              
        bin zero                                        11521          1          -    Covered              
        bin positive                                   224794          1          -    Covered              
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin negative                                   164675          1          -    Covered              
        bin zero                                        38906          1          -    Covered              
        bin positive                                   196437          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 9          9          -                      
        missing/total bins:                                 0          9          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.cross_num_print_missing=0
        Auto, Default and User Defined Bins:
            bin <two_operand,positive,positive>         74338          1          -    Covered              
            bin <two_operand,zero,positive>              4108          1          -    Covered              
            bin <two_operand,negative,positive>         53389          1          -    Covered              
            bin <two_operand,positive,zero>              4600          1          -    Covered              
            bin <two_operand,zero,zero>                   170          1          -    Covered              
            bin <two_operand,negative,zero>              4541          1          -    Covered              
            bin <two_operand,positive,negative>         62626          1          -    Covered              
            bin <two_operand,zero,negative>              3525          1          -    Covered              
            bin <two_operand,negative,negative>         44848          1          -    Covered              
 TYPE /u_cpu/u_decoder/three_operand_cg               100.00%        100          -    Covered              
    covered/total bins:                                    37         37          -                      
    missing/total bins:                                     0         37          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint op3                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                27         27          -                      
        missing/total bins:                                 0         27          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_decoder/three_operand_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    37         37          -                      
    missing/total bins:                                     0         37          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_decoder/three_operand_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin three_operand                               94344          1          -    Covered              
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin negative                                   163703          1          -    Covered              
        bin zero                                        11521          1          -    Covered              
        bin positive                                   224794          1          -    Covered              
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin negative                                   164675          1          -    Covered              
        bin zero                                        38906          1          -    Covered              
        bin positive                                   196437          1          -    Covered              
    Coverpoint op3                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin negative                                    46912          1          -    Covered              
        bin zero                                       306738          1          -    Covered              
        bin positive                                    46368          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                27         27          -                      
        missing/total bins:                                 0         27          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.cross_num_print_missing=0
        Auto, Default and User Defined Bins:
            bin <three_operand,positive,positive,positive> 
                                                        11896          1          -    Covered              
            bin <three_operand,zero,positive,positive> 
                                                          626          1          -    Covered              
            bin <three_operand,negative,positive,positive> 
                                                         5793          1          -    Covered              
            bin <three_operand,positive,zero,positive> 
                                                          390          1          -    Covered              
            bin <three_operand,zero,zero,positive>         16          1          -    Covered              
            bin <three_operand,negative,zero,positive> 
                                                          382          1          -    Covered              
            bin <three_operand,positive,negative,positive> 
                                                        11674          1          -    Covered              
            bin <three_operand,zero,negative,positive> 
                                                          565          1          -    Covered              
            bin <three_operand,negative,negative,positive> 
                                                         6253          1          -    Covered              
            bin <three_operand,positive,positive,zero> 
                                                         4767          1          -    Covered              
            bin <three_operand,zero,positive,zero>        270          1          -    Covered              
            bin <three_operand,negative,positive,zero> 
                                                         4280          1          -    Covered              
            bin <three_operand,positive,zero,zero>       1012          1          -    Covered              
            bin <three_operand,zero,zero,zero>              7          1          -    Covered              
            bin <three_operand,negative,zero,zero>       1090          1          -    Covered              
            bin <three_operand,positive,negative,zero> 
                                                         3738          1          -    Covered              
            bin <three_operand,zero,negative,zero>        218          1          -    Covered              
            bin <three_operand,negative,negative,zero> 
                                                         3462          1          -    Covered              
            bin <three_operand,positive,positive,negative> 
                                                        11745          1          -    Covered              
            bin <three_operand,zero,positive,negative> 
                                                          600          1          -    Covered              
            bin <three_operand,negative,positive,negative> 
                                                         6267          1          -    Covered              
            bin <three_operand,positive,zero,negative> 
                                                          420          1          -    Covered              
            bin <three_operand,zero,zero,negative>         32          1          -    Covered              
            bin <three_operand,negative,zero,negative> 
                                                          429          1          -    Covered              
            bin <three_operand,positive,negative,negative> 
                                                        11410          1          -    Covered              
            bin <three_operand,zero,negative,negative> 
                                                          521          1          -    Covered              
            bin <three_operand,negative,negative,negative> 
                                                         6481          1          -    Covered              
 TYPE /u_cpu/u_branch_unit/branch_cg                  100.00%        100          -    Covered              
    covered/total bins:                                    26         26          -                      
    missing/total bins:                                     0         26          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint next_pc                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                16         16          -                      
        missing/total bins:                                 0         16          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_branch_unit/branch_cg_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    26         26          -                      
    missing/total bins:                                     0         26          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_branch_unit/branch_cg_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin instr[JAL]                                  10844          1          -    Covered              
        bin instr[JALR]                                 10611          1          -    Covered              
        bin instr[BEQ]                                  10696          1          -    Covered              
        bin instr[BNE]                                  11148          1          -    Covered              
        bin instr[BLT]                                  10540          1          -    Covered              
        bin instr[BLTU]                                 10012          1          -    Covered              
        bin instr[BGE]                                   9884          1          -    Covered              
        bin instr[BGEU]                                 10660          1          -    Covered              
    Coverpoint next_pc                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        ignore_bin zero                                    42                     -    Occurred             
        bin positive                                   373114          1          -    Covered              
        bin negative                                    26860          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                16         16          -                      
        missing/total bins:                                 0         16          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.cross_num_print_missing=0
        Auto, Default and User Defined Bins:
            bin <instr[BGEU],negative>                   1736          1          -    Covered              
            bin <instr[BGE],negative>                    1670          1          -    Covered              
            bin <instr[BLTU],negative>                   1576          1          -    Covered              
            bin <instr[BLT],negative>                    1684          1          -    Covered              
            bin <instr[BNE],negative>                    3138          1          -    Covered              
            bin <instr[BEQ],negative>                     456          1          -    Covered              
            bin <instr[JALR],negative>                   2894          1          -    Covered              
            bin <instr[JAL],negative>                    3114          1          -    Covered              
            bin <instr[BGEU],positive>                   8924          1          -    Covered              
            bin <instr[BGE],positive>                    8208          1          -    Covered              
            bin <instr[BLTU],positive>                   8436          1          -    Covered              
            bin <instr[BLT],positive>                    8854          1          -    Covered              
            bin <instr[BNE],positive>                    8006          1          -    Covered              
            bin <instr[BEQ],positive>                   10240          1          -    Covered              
            bin <instr[JALR],positive>                   7696          1          -    Covered              
            bin <instr[JAL],positive>                    7730          1          -    Covered              
 TYPE /u_cpu/u_memory_ctrl/mcu_cg                     100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                24         24          -                      
        missing/total bins:                                 0         24          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_memory_ctrl/mcu_cg_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_memory_ctrl/mcu_cg_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin instr[LW]                                   10556          1          -    Covered              
        bin instr[LH]                                   10464          1          -    Covered              
        bin instr[LB]                                   10616          1          -    Covered              
        bin instr[LHU]                                  10260          1          -    Covered              
        bin instr[LBU]                                  10596          1          -    Covered              
        bin instr[SW]                                   10436          1          -    Covered              
        bin instr[SH]                                   10232          1          -    Covered              
        bin instr[SB]                                   10736          1          -    Covered              
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin positive                                   277666          1          -    Covered              
        bin zero                                          515          1          -    Covered              
        bin negative                                   121836          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                24         24          -                      
        missing/total bins:                                 0         24          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.cross_num_print_missing=0
        Auto, Default and User Defined Bins:
            bin <instr[SB],negative>                     3248          1          -    Covered              
            bin <instr[SH],negative>                     2972          1          -    Covered              
            bin <instr[SW],negative>                     3124          1          -    Covered              
            bin <instr[LBU],negative>                    1594          1          -    Covered              
            bin <instr[LHU],negative>                    1516          1          -    Covered              
            bin <instr[LB],negative>                     4310          1          -    Covered              
            bin <instr[LH],negative>                     4248          1          -    Covered              
            bin <instr[LW],negative>                     4272          1          -    Covered              
            bin <instr[SB],zero>                           32          1          -    Covered              
            bin <instr[SH],zero>                           16          1          -    Covered              
            bin <instr[SW],zero>                            4          1          -    Covered              
            bin <instr[LBU],zero>                          24          1          -    Covered              
            bin <instr[LHU],zero>                           8          1          -    Covered              
            bin <instr[LB],zero>                           28          1          -    Covered              
            bin <instr[LH],zero>                            4          1          -    Covered              
            bin <instr[LW],zero>                            2          1          -    Covered              
            bin <instr[SB],positive>                     7456          1          -    Covered              
            bin <instr[SH],positive>                     7244          1          -    Covered              
            bin <instr[SW],positive>                     7308          1          -    Covered              
            bin <instr[LBU],positive>                    8978          1          -    Covered              
            bin <instr[LHU],positive>                    8736          1          -    Covered              
            bin <instr[LB],positive>                     6278          1          -    Covered              
            bin <instr[LH],positive>                     6212          1          -    Covered              
            bin <instr[LW],positive>                     6282          1          -    Covered              
 TYPE /u_cpu/u_memory_ctrl/mcu_halfword_cg            100.00%        100          -    Covered              
    covered/total bins:                                    19         19          -                      
    missing/total bins:                                     0         19          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint offset                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_memory_ctrl/mcu_halfword_cg_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    19         19          -                      
    missing/total bins:                                     0         19          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_memory_ctrl/mcu_halfword_cg_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin instr[LH]                                   10464          1          -    Covered              
        bin instr[LHU]                                  10260          1          -    Covered              
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin positive                                   277666          1          -    Covered              
        bin zero                                          515          1          -    Covered              
        bin negative                                   121836          1          -    Covered              
    Coverpoint offset                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        ignore_bin misaligned                            8054                     -    Occurred             
        bin offset[0]                                  380175          1          -    Covered              
        bin offset[1]                                   11788          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.cross_num_print_missing=0
        Auto, Default and User Defined Bins:
            bin <instr[LHU],negative,offset[1]>           390          1          -    Covered              
            bin <instr[LH],negative,offset[1]>           1096          1          -    Covered              
            bin <instr[LHU],negative,offset[0]>          1126          1          -    Covered              
            bin <instr[LH],negative,offset[0]>           3152          1          -    Covered              
            bin <instr[LHU],zero,offset[1]>                 1          1          -    Covered              
            bin <instr[LH],zero,offset[1]>                  1          1          -    Covered              
            bin <instr[LHU],zero,offset[0]>                 7          1          -    Covered              
            bin <instr[LH],zero,offset[0]>                  3          1          -    Covered              
            bin <instr[LHU],positive,offset[1]>          2149          1          -    Covered              
            bin <instr[LH],positive,offset[1]>           1571          1          -    Covered              
            bin <instr[LHU],positive,offset[0]>          6587          1          -    Covered              
            bin <instr[LH],positive,offset[0]>           4641          1          -    Covered              
 TYPE /u_cpu/u_memory_ctrl/mcu_byte_cg                100.00%        100          -    Covered              
    covered/total bins:                                    19         19          -                      
    missing/total bins:                                     0         19          -                      
    % Hit:                                            100.00%        100          -                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(0)
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Coverpoint offset                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
 Covergroup instance \/top/u_cpu/u_memory_ctrl/mcu_byte_cg_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    19         19          -                      
    missing/total bins:                                     0         19          -                      
    % Hit:                                            100.00%        100          -                      
    option.name=\/top/u_cpu/u_memory_ctrl/mcu_byte_cg_inst 
    option.weight=1
    option.goal=100
    option.comment=
    option.at_least=1
    option.auto_bin_max=64
    option.cross_num_print_missing=0
    option.detect_overlap=0
    option.per_instance=0
    option.get_inst_coverage=0
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin instr[LB]                                   10616          1          -    Covered              
        bin instr[LBU]                                  10596          1          -    Covered              
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin positive                                   277666          1          -    Covered              
        bin zero                                          515          1          -    Covered              
        bin negative                                   121836          1          -    Covered              
    Coverpoint offset                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.auto_bin_max=64
        option.detect_overlap=0
        bin offset[0]                                  384205          1          -    Covered              
        bin offset[1]                                   15812          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        option.weight=1
        option.goal=100
        option.comment=
        option.at_least=1
        option.cross_num_print_missing=0
        Auto, Default and User Defined Bins:
            bin <instr[LBU],negative,offset[1]>           394          1          -    Covered              
            bin <instr[LB],negative,offset[1]>           1076          1          -    Covered              
            bin <instr[LBU],negative,offset[0]>          1200          1          -    Covered              
            bin <instr[LB],negative,offset[0]>           3234          1          -    Covered              
            bin <instr[LBU],zero,offset[1]>                 9          1          -    Covered              
            bin <instr[LB],zero,offset[1]>                 11          1          -    Covered              
            bin <instr[LBU],zero,offset[0]>                15          1          -    Covered              
            bin <instr[LB],zero,offset[0]>                 17          1          -    Covered              
            bin <instr[LBU],positive,offset[1]>          2211          1          -    Covered              
            bin <instr[LB],positive,offset[1]>           1597          1          -    Covered              
            bin <instr[LBU],positive,offset[0]>          6767          1          -    Covered              
            bin <instr[LB],positive,offset[0]>           4681          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 9

Total Coverage By File (code coverage only, filtered view): 83.01%

